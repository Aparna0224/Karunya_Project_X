{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\OneDrive\\\\Desktop\\\\learning tutor\\\\Karunya_Project_X\\\\frontend\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport \"./quiz.css\";\n\n// Define the quiz data with 15 questions per module\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst quizData = {\n  Python: {\n    1: [{\n      question: \"Who created Python?\",\n      options: [\"Guido van Rossum\", \"James Gosling\", \"Dennis Ritchie\", \"Bjarne Stroustrup\"],\n      answer: \"Guido van Rossum\",\n      explanation: \"Guido van Rossum created Python in the late 1980s. He is often referred to as Python's 'Benevolent Dictator For Life' (BDFL).\"\n    }, {\n      question: \"Which Python version introduced pattern matching?\",\n      options: [\"Python 2.7\", \"Python 3.6\", \"Python 3.9\", \"Python 3.10\"],\n      answer: \"Python 3.10\",\n      explanation: \"Pattern matching was introduced in Python 3.10 as part of PEP 634. It allows for more expressive and readable code when working with complex data structures.\"\n    }, {\n      question: \"What is NOT a key feature of Python?\",\n      options: [\"Readability\", \"Dynamically typed\", \"Strong typing\", \"Complex syntax\"],\n      answer: \"Complex syntax\",\n      explanation: \"Python is known for its simplicity and readability, not complex syntax. Its syntax is designed to be intuitive and easy to understand.\"\n    }, {\n      question: \"What does the `len()` function do?\",\n      options: [\"Counts items in a list\", \"Finds maximum value\", \"Checks if a variable is None\", \"Reverses a string\"],\n      answer: \"Counts items in a list\",\n      explanation: \"The `len()` function returns the number of items in an object, such as a list, tuple, or string.\"\n    }, {\n      question: \"What will `5 ** 2` return?\",\n      options: [\"25\", \"10\", \"5\", \"2.5\"],\n      answer: \"25\",\n      explanation: \"The `**` operator is used for exponentiation in Python. `5 ** 2` means 5 raised to the power of 2, which is 25.\"\n    }, {\n      question: \"Which statement is used for loops in Python?\",\n      options: [\"for\", \"loop\", \"repeat\", \"iterate\"],\n      answer: \"for\",\n      explanation: \"The `for` statement is used to iterate over a sequence (like a list, tuple, or string) in Python.\"\n    }, {\n      question: \"Which of these is not a Python data type?\",\n      options: [\"List\", \"Tuple\", \"Class\", \"Enum\"],\n      answer: \"Enum\",\n      explanation: \"While Python supports lists, tuples, and classes, `Enum` is not a built-in data type. It is available in the `enum` module.\"\n    }, {\n      question: \"What does the `continue` statement do?\",\n      options: [\"Exits the loop\", \"Skips the current iteration\", \"Repeats the loop\", \"Breaks the loop\"],\n      answer: \"Skips the current iteration\",\n      explanation: \"The `continue` statement skips the rest of the code inside the loop for the current iteration and moves to the next iteration.\"\n    }, {\n      question: \"What does `self` refer to in Python classes?\",\n      options: [\"The current class\", \"The previous object\", \"The current instance\", \"The superclass\"],\n      answer: \"The current instance\",\n      explanation: \"In Python, `self` refers to the current instance of the class. It is used to access variables and methods associated with the instance.\"\n    }, {\n      question: \"How do you declare a function in Python?\",\n      options: [\"def func():\", \"function func() {}\", \"funct func() {}\", \"void func()\"],\n      answer: \"def func():\",\n      explanation: \"In Python, functions are declared using the `def` keyword, followed by the function name and parentheses.\"\n    }, {\n      question: \"Which module is used for regular expressions in Python?\",\n      options: [\"regex\", \"re\", \"regularex\", \"pattern\"],\n      answer: \"re\",\n      explanation: \"The `re` module provides support for regular expressions in Python, allowing pattern matching and text manipulation.\"\n    }, {\n      question: \"Which keyword is used to create a function?\",\n      options: [\"function\", \"def\", \"lambda\", \"create\"],\n      answer: \"def\",\n      explanation: \"The `def` keyword is used to define a function in Python.\"\n    }, {\n      question: \"What does the `is` keyword check?\",\n      options: [\"Value equality\", \"Reference equality\", \"Identity equality\", \"Type checking\"],\n      answer: \"Identity equality\",\n      explanation: \"The `is` keyword checks if two variables point to the same object in memory (identity equality), not if their values are equal.\"\n    }, {\n      question: \"Which data structure allows duplicate values?\",\n      options: [\"Set\", \"Tuple\", \"List\", \"Dictionary\"],\n      answer: \"List\",\n      explanation: \"Lists in Python allow duplicate values, whereas sets and dictionaries do not.\"\n    }, {\n      question: \"How do you start a comment in Python?\",\n      options: [\"//\", \"/* */\", \"#\", \"--\"],\n      answer: \"#\",\n      explanation: \"In Python, comments start with the `#` symbol. Multi-line comments are not natively supported but can be simulated using triple quotes.\"\n    }],\n    2: [{\n      question: \"Which of these is used to store key-value pairs in Python?\",\n      options: [\"List\", \"Tuple\", \"Dictionary\", \"Set\"],\n      answer: \"Dictionary\",\n      explanation: \"Dictionaries in Python store data as key-value pairs, making them ideal for mapping relationships.\"\n    }, {\n      question: \"Which method removes whitespace from a string?\",\n      options: [\"strip()\", \"trim()\", \"remove()\", \"clean()\"],\n      answer: \"strip()\",\n      explanation: \"The `strip()` method removes leading and trailing whitespace from a string.\"\n    }, {\n      question: \"How do you open a file in read mode?\",\n      options: [\"open('file.txt', 'r')\", \"open('file.txt')\", \"open('file.txt', 'w')\", \"file('file.txt')\"],\n      answer: \"open('file.txt', 'r')\",\n      explanation: \"The `open()` function with the mode `'r'` opens a file in read mode.\"\n    }, {\n      question: \"Which data structure ensures unique values?\",\n      options: [\"List\", \"Tuple\", \"Set\", \"Dictionary\"],\n      answer: \"Set\",\n      explanation: \"Sets in Python ensure that all elements are unique. Duplicate values are automatically removed.\"\n    }, {\n      question: \"Which of these is immutable?\",\n      options: [\"List\", \"Set\", \"Dictionary\", \"Tuple\"],\n      answer: \"Tuple\",\n      explanation: \"Tuples are immutable in Python, meaning their contents cannot be changed after creation.\"\n    }, {\n      question: \"Which of the following is used to find the length of a list?\",\n      options: [\"size()\", \"count()\", \"len()\", \"length()\"],\n      answer: \"len()\",\n      explanation: \"The `len()` function returns the number of items in a list or other iterable.\"\n    }, {\n      question: \"What is the default mode for opening a file in Python?\",\n      options: [\"r\", \"w\", \"a\", \"rw\"],\n      answer: \"r\",\n      explanation: \"The default mode for the `open()` function is `'r'`, which stands for read mode.\"\n    }, {\n      question: \"Which function removes an item from a list?\",\n      options: [\"delete()\", \"remove()\", \"erase()\", \"discard()\"],\n      answer: \"remove()\",\n      explanation: \"The `remove()` method removes the first occurrence of a specified value from a list.\"\n    }, {\n      question: \"Which function returns the highest value in a list?\",\n      options: [\"min()\", \"high()\", \"max()\", \"top()\"],\n      answer: \"max()\",\n      explanation: \"The `max()` function returns the largest item in an iterable or the largest of two or more arguments.\"\n    }, {\n      question: \"How do you sort a list in ascending order?\",\n      options: [\"sort()\", \"order()\", \"ascending()\", \"arrange()\"],\n      answer: \"sort()\",\n      explanation: \"The `sort()` method sorts the list in place in ascending order by default.\"\n    }, {\n      question: \"Which method converts a string to lowercase?\",\n      options: [\"lower()\", \"small()\", \"down()\", \"case()\"],\n      answer: \"lower()\",\n      explanation: \"The `lower()` method converts all characters in a string to lowercase.\"\n    }, {\n      question: \"What does `split()` method do?\",\n      options: [\"Splits a string into words\", \"Combines two strings\", \"Reverses a string\", \"Removes spaces\"],\n      answer: \"Splits a string into words\",\n      explanation: \"The `split()` method splits a string into a list of substrings based on a specified delimiter (default is whitespace).\"\n    }, {\n      question: \"Which of the following methods returns a copy of the string with all occurrences of a substring replaced?\",\n      options: [\"replace()\", \"swap()\", \"change()\", \"sub()\"],\n      answer: \"replace()\",\n      explanation: \"The `replace()` method returns a new string with all occurrences of a substring replaced by another substring.\"\n    }, {\n      question: \"Which statement is used to check if a key exists in a dictionary?\",\n      options: [\"if key in dict\", \"if dict contains key\", \"if dict.has_key(key)\", \"if key exists in dict\"],\n      answer: \"if key in dict\",\n      explanation: \"The `in` keyword is used to check if a key exists in a dictionary.\"\n    }, {\n      question: \"Which function adds an element to the end of a list?\",\n      options: [\"push()\", \"append()\", \"insert()\", \"add()\"],\n      answer: \"append()\",\n      explanation: \"The `append()` method adds an element to the end of a list.\"\n    }],\n    // Add explanations for other modules and courses similarly... {\n    3: [{\n      question: \"Which keyword defines a function in Python?\",\n      options: [\"function\", \"def\", \"define\", \"func\"],\n      answer: \"def\",\n      explanation: \"In Python, the `def` keyword is used to define a function. For example: `def my_function():`.\"\n    }, {\n      question: \"What is the purpose of a class in Python?\",\n      options: [\"To store multiple values\", \"To define a blueprint for objects\", \"To execute functions\", \"To perform calculations\"],\n      answer: \"To define a blueprint for objects\",\n      explanation: \"A class in Python is a blueprint for creating objects. It defines the properties and behaviors that the objects created from the class will have.\"\n    }, {\n      question: \"Which method is called when an object is created?\",\n      options: [\"__start__\", \"__new__\", \"__init__\", \"__create__\"],\n      answer: \"__init__\",\n      explanation: \"The `__init__` method is called when an object is created. It is used to initialize the object's attributes.\"\n    }, {\n      question: \"Which principle allows different classes to have the same method?\",\n      options: [\"Encapsulation\", \"Polymorphism\", \"Inheritance\", \"Abstraction\"],\n      answer: \"Polymorphism\",\n      explanation: \"Polymorphism allows different classes to have methods with the same name but different implementations.\"\n    }, {\n      question: \"Which function raises an exception in Python?\",\n      options: [\"throw\", \"raise\", \"error\", \"exception\"],\n      answer: \"raise\",\n      explanation: \"The `raise` keyword is used to raise an exception in Python. For example: `raise ValueError('Invalid value')`.\"\n    }, {\n      question: \"Which keyword is used to inherit a class?\",\n      options: [\"extends\", \"inherits\", \"super\", \"class\"],\n      answer: \"class\",\n      explanation: \"In Python, the `class` keyword is used to define a class, and inheritance is achieved by specifying the parent class in parentheses. For example: `class ChildClass(ParentClass):`.\"\n    }, {\n      question: \"How do you define a constructor in Python?\",\n      options: [\"def init()\", \"def __init__()\", \"def constructor()\", \"def new()\"],\n      answer: \"def __init__()\",\n      explanation: \"The constructor in Python is defined using the `__init__` method. It is automatically called when a new object is created.\"\n    }, {\n      question: \"What is encapsulation in Python?\",\n      options: [\"Hiding implementation details\", \"Reusing code\", \"Making variables public\", \"None of the above\"],\n      answer: \"Hiding implementation details\",\n      explanation: \"Encapsulation is the concept of hiding the internal details of an object and exposing only the necessary functionality.\"\n    }, {\n      question: \"Which symbol is used for method overriding in Python?\",\n      options: [\"@\", \"#\", \"override\", \"None\"],\n      answer: \"None\",\n      explanation: \"Python does not use a specific symbol for method overriding. Overriding is achieved by defining a method in the child class with the same name as in the parent class.\"\n    }, {\n      question: \"Which method returns the length of a list?\",\n      options: [\"size()\", \"len()\", \"count()\", \"length()\"],\n      answer: \"len()\",\n      explanation: \"The `len()` function returns the number of items in a list or other iterable.\"\n    }, {\n      question: \"Which function is used to delete an object?\",\n      options: [\"delete()\", \"del()\", \"remove()\", \"erase()\"],\n      answer: \"del()\",\n      explanation: \"The `del` keyword is used to delete an object in Python. For example: `del my_object`.\"\n    }, {\n      question: \"What is the superclass of all classes in Python?\",\n      options: [\"BaseClass\", \"Root\", \"Object\", \"Super\"],\n      answer: \"Object\",\n      explanation: \"In Python, the `object` class is the superclass of all classes. It is the root of the class hierarchy.\"\n    }, {\n      question: \"Which function is used to check if an object is an instance of a class?\",\n      options: [\"isInstance()\", \"checkType()\", \"instanceof()\", \"isinstance()\"],\n      answer: \"isinstance()\",\n      explanation: \"The `isinstance()` function checks if an object is an instance of a specific class or a tuple of classes.\"\n    }, {\n      question: \"Which keyword is used to define a static method?\",\n      options: [\"@staticmethod\", \"@class\", \"@static\", \"@func\"],\n      answer: \"@staticmethod\",\n      explanation: \"The `@staticmethod` decorator is used to define a static method in Python. Static methods do not require a reference to the instance or class.\"\n    }, {\n      question: \"Which method is called to destroy an object?\",\n      options: [\"destroy()\", \"remove()\", \"__del__()\", \"delete()\"],\n      answer: \"__del__()\",\n      explanation: \"The `__del__` method is called when an object is about to be destroyed. It is used to perform cleanup actions.\"\n    }],\n    4: [{\n      question: \"Which Python module is used for turtle graphics?\",\n      options: [\"graphics\", \"draw\", \"turtle\", \"paint\"],\n      answer: \"turtle\",\n      explanation: \"The `turtle` module is used for creating graphics and drawings in Python. It provides a simple way to create shapes and patterns.\"\n    }, {\n      question: \"What does the PIL library help with?\",\n      options: [\"File management\", \"Image processing\", \"Machine learning\", \"Data visualization\"],\n      answer: \"Image processing\",\n      explanation: \"PIL (Python Imaging Library) is used for image processing tasks such as opening, manipulating, and saving images.\"\n    }, {\n      question: \"Which function is used to convert an image to grayscale?\",\n      options: [\"convert('L')\", \"grayscale()\", \"change_gray()\", \"set_gray()\"],\n      answer: \"convert('L')\",\n      explanation: \"The `convert('L')` function in PIL converts an image to grayscale. The 'L' mode stands for luminance.\"\n    }, {\n      question: \"Which library is used for opening image files in Python?\",\n      options: [\"Pandas\", \"Matplotlib\", \"PIL\", \"Seaborn\"],\n      answer: \"PIL\",\n      explanation: \"The PIL (Python Imaging Library) is used for opening, manipulating, and saving image files.\"\n    }, {\n      question: \"Which shape can be drawn using turtle graphics?\",\n      options: [\"Circle\", \"Rectangle\", \"Polygon\", \"All of the above\"],\n      answer: \"All of the above\",\n      explanation: \"The `turtle` module can be used to draw various shapes, including circles, rectangles, and polygons.\"\n    }, {\n      question: \"Which function is used to display an image using PIL?\",\n      options: [\"show()\", \"display()\", \"render()\", \"draw()\"],\n      answer: \"show()\",\n      explanation: \"The `show()` function in PIL displays an image using the default image viewer.\"\n    }, {\n      question: \"Which method is used to load an image in PIL?\",\n      options: [\"Image.open()\", \"openImage()\", \"load()\", \"readImage()\"],\n      answer: \"Image.open()\",\n      explanation: \"The `Image.open()` function is used to load an image from a file in PIL.\"\n    }, {\n      question: \"Which function saves an image in PIL?\",\n      options: [\"save()\", \"export()\", \"write()\", \"store()\"],\n      answer: \"save()\",\n      explanation: \"The `save()` function in PIL is used to save an image to a file.\"\n    }, {\n      question: \"Which function draws a rectangle using turtle?\",\n      options: [\"drawRectangle()\", \"rectangle()\", \"rect()\", \"turtle.forward()\"],\n      answer: \"turtle.forward()\",\n      explanation: \"The `turtle.forward()` function is used to move the turtle forward, which can be used to draw shapes like rectangles.\"\n    }, {\n      question: \"Which color mode does PIL support?\",\n      options: [\"RGB\", \"CMYK\", \"L\", \"All of the above\"],\n      answer: \"All of the above\",\n      explanation: \"PIL supports multiple color modes, including RGB, CMYK, and grayscale (L).\"\n    }, {\n      question: \"Which function is used to draw a circle in turtle?\",\n      options: [\"circle()\", \"drawCircle()\", \"ellipse()\", \"oval()\"],\n      answer: \"circle()\",\n      explanation: \"The `circle()` function in the `turtle` module is used to draw a circle with a specified radius.\"\n    }, {\n      question: \"Which function rotates an image using PIL?\",\n      options: [\"rotate()\", \"turn()\", \"flip()\", \"spin()\"],\n      answer: \"rotate()\",\n      explanation: \"The `rotate()` function in PIL rotates an image by a specified angle.\"\n    }, {\n      question: \"Which function resizes an image using PIL?\",\n      options: [\"resize()\", \"scale()\", \"zoom()\", \"fit()\"],\n      answer: \"resize()\",\n      explanation: \"The `resize()` function in PIL resizes an image to the specified dimensions.\"\n    }, {\n      question: \"Which function pastes one image onto another in PIL?\",\n      options: [\"paste()\", \"overlay()\", \"merge()\", \"combine()\"],\n      answer: \"paste()\",\n      explanation: \"The `paste()` function in PIL is used to paste one image onto another at a specified position.\"\n    }, {\n      question: \"Which function converts an image to black and white?\",\n      options: [\"convert('1')\", \"bw()\", \"grayscale()\", \"mono()\"],\n      answer: \"convert('1')\",\n      explanation: \"The `convert('1')` function in PIL converts an image to black and white (1-bit pixels).\"\n    }],\n    5: [{\n      question: \"Which module is used for GUI programming in Python?\",\n      options: [\"PyGUI\", \"Tkinter\", \"GUIX\", \"Pandas\"],\n      answer: \"Tkinter\",\n      explanation: \"The `Tkinter` module is the standard Python interface to the Tk GUI toolkit. It is widely used for creating desktop applications with graphical user interfaces.\"\n    }, {\n      question: \"Which Tkinter method creates a button?\",\n      options: [\"Button()\", \"create_button()\", \"make_button()\", \"btn()\"],\n      answer: \"Button()\",\n      explanation: \"The `Button()` method in Tkinter is used to create a button widget. It takes parameters like text, command, and style to customize the button.\"\n    }, {\n      question: \"Which method in Tkinter is used to start the GUI loop?\",\n      options: [\"start()\", \"begin()\", \"mainloop()\", \"run()\"],\n      answer: \"mainloop()\",\n      explanation: \"The `mainloop()` method in Tkinter starts the event loop, which waits for user interaction and updates the GUI accordingly.\"\n    }, {\n      question: \"Which layout manager in Tkinter arranges widgets in a table?\",\n      options: [\"pack()\", \"grid()\", \"place()\", \"align()\"],\n      answer: \"grid()\",\n      explanation: \"The `grid()` layout manager arranges widgets in a table-like structure with rows and columns, making it easy to align widgets.\"\n    }, {\n      question: \"Which database is commonly used with Tkinter for storing data?\",\n      options: [\"MongoDB\", \"SQLite\", \"PostgreSQL\", \"Firebase\"],\n      answer: \"SQLite\",\n      explanation: \"SQLite is a lightweight, file-based database commonly used with Tkinter for storing data locally in desktop applications.\"\n    }, {\n      question: \"Which Tkinter widget is used for creating an input field?\",\n      options: [\"Label\", \"Button\", \"Entry\", \"Frame\"],\n      answer: \"Entry\",\n      explanation: \"The `Entry` widget in Tkinter is used to create a single-line text input field where users can enter data.\"\n    }, {\n      question: \"Which function is used to change the text in a Tkinter label?\",\n      options: [\"set()\", \"configure()\", \"change()\", \"modify()\"],\n      answer: \"configure()\",\n      explanation: \"The `configure()` method is used to change the properties of a widget, such as the text of a label, after it has been created.\"\n    }, {\n      question: \"Which event is triggered when a button is clicked in Tkinter?\",\n      options: [\"onClick\", \"click\", \"press\", \"command\"],\n      answer: \"command\",\n      explanation: \"The `command` parameter in a button widget specifies the function to be called when the button is clicked.\"\n    }, {\n      question: \"Which function is used to display a message box in Tkinter?\",\n      options: [\"showMessage()\", \"messageBox()\", \"messagebox.showinfo()\", \"infoBox()\"],\n      answer: \"messagebox.showinfo()\",\n      explanation: \"The `messagebox.showinfo()` function in Tkinter displays a message box with an informational message and an OK button.\"\n    }, {\n      question: \"Which geometry manager places widgets at absolute positions?\",\n      options: [\"pack()\", \"grid()\", \"place()\", \"align()\"],\n      answer: \"place()\",\n      explanation: \"The `place()` geometry manager allows you to place widgets at specific (x, y) coordinates within the window.\"\n    }, {\n      question: \"Which function is used to change the background color of a Tkinter window?\",\n      options: [\"setBg()\", \"bgcolor()\", \"config(bg='color')\", \"setBackground()\"],\n      answer: \"config(bg='color')\",\n      explanation: \"The `config()` method is used to change the background color of a Tkinter window by setting the `bg` parameter.\"\n    }, {\n      question: \"Which function in Tkinter creates a dropdown menu?\",\n      options: [\"Dropdown()\", \"Select()\", \"Menu()\", \"OptionMenu()\"],\n      answer: \"OptionMenu()\",\n      explanation: \"The `OptionMenu()` widget in Tkinter is used to create a dropdown menu with a list of options for the user to choose from.\"\n    }, {\n      question: \"Which function is used to close a Tkinter window?\",\n      options: [\"close()\", \"destroy()\", \"exit()\", \"quit()\"],\n      answer: \"destroy()\",\n      explanation: \"The `destroy()` method is used to close a Tkinter window. It terminates the main loop and closes the application.\"\n    }, {\n      question: \"Which module in Tkinter allows creating canvas-based graphics?\",\n      options: [\"Draw\", \"Canvas\", \"Paint\", \"Graph\"],\n      answer: \"Canvas\",\n      explanation: \"The `Canvas` widget in Tkinter is used to create canvas-based graphics, such as lines, shapes, and images.\"\n    }, {\n      question: \"Which method is used to bind keyboard events in Tkinter?\",\n      options: [\"bind()\", \"keypress()\", \"attach()\", \"listen()\"],\n      answer: \"bind()\",\n      explanation: \"The `bind()` method is used to bind keyboard or mouse events to a function in Tkinter. For example, `bind('<Key>', callback)`.\"\n    }],\n    6: [{\n      question: \"Which module in Python is used for multithreading?\",\n      options: [\"threading\", \"multiprocess\", \"parallel\", \"async\"],\n      answer: \"threading\",\n      explanation: \"The `threading` module in Python is used to create and manage threads, allowing concurrent execution of tasks.\"\n    }, {\n      question: \"Which Python module is used for socket programming?\",\n      options: [\"os\", \"sys\", \"socket\", \"requests\"],\n      answer: \"socket\",\n      explanation: \"The `socket` module in Python provides low-level networking interfaces for socket programming, enabling communication between devices over a network.\"\n    }, {\n      question: \"Which function is used to make a thread sleep?\",\n      options: [\"wait()\", \"pause()\", \"delay()\", \"sleep()\"],\n      answer: \"sleep()\",\n      explanation: \"The `sleep()` function from the `time` module is used to pause the execution of a thread for a specified number of seconds.\"\n    }, {\n      question: \"Which communication model does socket programming use?\",\n      options: [\"Client-Server\", \"Peer-to-Peer\", \"Standalone\", \"Single-Process\"],\n      answer: \"Client-Server\",\n      explanation: \"Socket programming typically uses the client-server model, where a server listens for connections and clients connect to the server to exchange data.\"\n    }, {\n      question: \"Which function is used to create a new thread?\",\n      options: [\"threading.Thread()\", \"new_thread()\", \"spawn_thread()\", \"createThread()\"],\n      answer: \"threading.Thread()\",\n      explanation: \"The `threading.Thread()` function is used to create a new thread in Python. It takes a target function to execute in the new thread.\"\n    }, {\n      question: \"Which method starts a new thread?\",\n      options: [\"run()\", \"start()\", \"execute()\", \"begin()\"],\n      answer: \"start()\",\n      explanation: \"The `start()` method of a `Thread` object starts the thread's execution by calling its `run()` method.\"\n    }, {\n      question: \"Which method is used to wait for a thread to complete?\",\n      options: [\"join()\", \"wait()\", \"sleep()\", \"pause()\"],\n      answer: \"join()\",\n      explanation: \"The `join()` method is used to wait for a thread to complete its execution before proceeding further in the main program.\"\n    }, {\n      question: \"Which function in socket programming binds the server to an address?\",\n      options: [\"bind()\", \"connect()\", \"attach()\", \"listen()\"],\n      answer: \"bind()\",\n      explanation: \"The `bind()` function associates a socket with a specific IP address and port number, allowing it to listen for incoming connections.\"\n    }, {\n      question: \"Which function listens for incoming connections?\",\n      options: [\"listen()\", \"accept()\", \"bind()\", \"connect()\"],\n      answer: \"listen()\",\n      explanation: \"The `listen()` function puts the server socket in a listening state, allowing it to accept incoming client connections.\"\n    }, {\n      question: \"Which method in socket programming closes a connection?\",\n      options: [\"disconnect()\", \"end()\", \"close()\", \"terminate()\"],\n      answer: \"close()\",\n      explanation: \"The `close()` method is used to close a socket connection, releasing the resources associated with it.\"\n    }, {\n      question: \"Which module in Python provides a high-level API for concurrency?\",\n      options: [\"asyncio\", \"concurrent\", \"multiprocessing\", \"threading\"],\n      answer: \"asyncio\",\n      explanation: \"The `asyncio` module provides a high-level API for writing asynchronous and concurrent code using `async` and `await`.\"\n    }, {\n      question: \"Which function is used to send data over a socket?\",\n      options: [\"send()\", \"write()\", \"transmit()\", \"push()\"],\n      answer: \"send()\",\n      explanation: \"The `send()` function is used to send data over a connected socket. It transmits bytes to the remote endpoint.\"\n    }, {\n      question: \"Which function is used to receive data over a socket?\",\n      options: [\"receive()\", \"read()\", \"recv()\", \"fetch()\"],\n      answer: \"recv()\",\n      explanation: \"The `recv()` function is used to receive data from a connected socket. It reads bytes sent by the remote endpoint.\"\n    }, {\n      question: \"Which function is used to set a socket in non-blocking mode?\",\n      options: [\"nonblock()\", \"setblocking(0)\", \"async()\", \"enable_async()\"],\n      answer: \"setblocking(0)\",\n      explanation: \"The `setblocking(0)` function sets a socket to non-blocking mode, allowing it to return immediately without waiting for data.\"\n    }, {\n      question: \"Which method is used to get the IP address of a hostname?\",\n      options: [\"gethostbyname()\", \"resolveIP()\", \"findIP()\", \"hostnameIP()\"],\n      answer: \"gethostbyname()\",\n      explanation: \"The `gethostbyname()` function resolves a hostname to its corresponding IP address using DNS.\"\n    }]\n  },\n  Java: {\n    1: [{\n      question: \"Who created Java?\",\n      options: [\"Brendan Eich\", \"James Gosling\", \"Dennis Ritchie\", \"Bjarne Stroustrup\"],\n      answer: \"James Gosling\",\n      explanation: \"James Gosling created Java in the mid-1990s while working at Sun Microsystems. It was originally designed for interactive television but later became a general-purpose programming language.\"\n    }, {\n      question: \"What is the default value of an int variable in Java?\",\n      options: [\"0\", \"null\", \"undefined\", \"1\"],\n      answer: \"0\",\n      explanation: \"In Java, the default value of an `int` variable is `0` if it is not explicitly initialized. This applies to instance variables and static variables.\"\n    }, {\n      question: \"Which package is imported by default in every Java program?\",\n      options: [\"java.util\", \"java.io\", \"java.lang\", \"java.net\"],\n      answer: \"java.lang\",\n      explanation: \"The `java.lang` package is automatically imported into every Java program. It contains fundamental classes like `String`, `Object`, and `System`.\"\n    }, {\n      question: \"Which keyword is used to define a constant in Java?\",\n      options: [\"const\", \"final\", \"constant\", \"static\"],\n      answer: \"final\",\n      explanation: \"The `final` keyword is used to define a constant in Java. Once a variable is declared as `final`, its value cannot be changed.\"\n    }, {\n      question: \"What is the superclass of all Java classes?\",\n      options: [\"Object\", \"Main\", \"Super\", \"Base\"],\n      answer: \"Object\",\n      explanation: \"The `Object` class is the superclass of all classes in Java. It is the root of the class hierarchy and provides methods like `equals()`, `hashCode()`, and `toString()`.\"\n    }, {\n      question: \"Which operator is used for bitwise AND?\",\n      options: [\"&\", \"|\", \"^\", \"%\"],\n      answer: \"&\",\n      explanation: \"The `&` operator is used for bitwise AND operations in Java. It compares each bit of two numbers and returns `1` if both bits are `1`, otherwise `0`.\"\n    }, {\n      question: \"What is a constructor in Java?\",\n      options: [\"A method that initializes an object\", \"A variable that holds an object\", \"A class method\", \"A loop\"],\n      answer: \"A method that initializes an object\",\n      explanation: \"A constructor in Java is a special method used to initialize objects. It has the same name as the class and is called when an object is created.\"\n    }, {\n      question: \"What does the static keyword mean?\",\n      options: [\"Method belongs to instance\", \"Method belongs to class\", \"Method is private\", \"Method is abstract\"],\n      answer: \"Method belongs to class\",\n      explanation: \"The `static` keyword in Java indicates that a method or variable belongs to the class rather than an instance of the class. It can be accessed without creating an object.\"\n    }, {\n      question: \"What is used to achieve inheritance in Java?\",\n      options: [\"this\", \"extends\", \"inherits\", \"super\"],\n      answer: \"extends\",\n      explanation: \"The `extends` keyword is used to achieve inheritance in Java. It allows a subclass to inherit properties and methods from a superclass.\"\n    }, {\n      question: \"Which loop runs at least once?\",\n      options: [\"for\", \"while\", \"do-while\", \"foreach\"],\n      answer: \"do-while\",\n      explanation: \"The `do-while` loop in Java runs at least once because the condition is checked after the loop body is executed.\"\n    }, {\n      question: \"What is the size of an int in Java?\",\n      options: [\"2 bytes\", \"4 bytes\", \"8 bytes\", \"16 bytes\"],\n      answer: \"4 bytes\",\n      explanation: \"In Java, an `int` is a 32-bit signed integer, which means it occupies 4 bytes of memory.\"\n    }, {\n      question: \"Which keyword is used to prevent method overriding?\",\n      options: [\"static\", \"super\", \"final\", \"this\"],\n      answer: \"final\",\n      explanation: \"The `final` keyword is used to prevent method overriding in Java. A method declared as `final` cannot be overridden by subclasses.\"\n    }, {\n      question: \"Which of the following is not a Java primitive type?\",\n      options: [\"int\", \"float\", \"char\", \"String\"],\n      answer: \"String\",\n      explanation: \"`String` is not a primitive type in Java. It is a class in the `java.lang` package. Primitive types include `int`, `float`, `char`, etc.\"\n    }, {\n      question: \"Which interface provides the ability to store key-value pairs?\",\n      options: [\"Map\", \"List\", \"Queue\", \"Set\"],\n      answer: \"Map\",\n      explanation: \"The `Map` interface in Java is used to store key-value pairs. Common implementations include `HashMap`, `TreeMap`, and `LinkedHashMap`.\"\n    }, {\n      question: \"What does JVM stand for?\",\n      options: [\"Java Virtual Machine\", \"Java Vendor Machine\", \"Java Version Model\", \"Java Variable Management\"],\n      answer: \"Java Virtual Machine\",\n      explanation: \"JVM stands for Java Virtual Machine. It is the runtime environment that executes Java bytecode and provides platform independence.\"\n    }],\n    2: [{\n      question: \"What is the main concept behind OOP?\",\n      options: [\"Structured Programming\", \"Encapsulation, Inheritance, Polymorphism, and Abstraction\", \"Functional Programming\", \"Memory Optimization\"],\n      answer: \"Encapsulation, Inheritance, Polymorphism, and Abstraction\",\n      explanation: \"Object-Oriented Programming (OOP) is based on four main concepts: Encapsulation, Inheritance, Polymorphism, and Abstraction.\"\n    }, {\n      question: \"What keyword is used to create an object?\",\n      options: [\"create\", \"new\", \"instance\", \"allocate\"],\n      answer: \"new\",\n      explanation: \"The `new` keyword is used to create an object in Java. It allocates memory for the object and calls the constructor to initialize it.\"\n    }, {\n      question: \"What is Encapsulation?\",\n      options: [\"Hiding implementation details\", \"Sorting data\", \"Alternative to loops\", \"Executing functions\"],\n      answer: \"Hiding implementation details\",\n      explanation: \"Encapsulation is the concept of hiding the internal details of an object and exposing only the necessary functionality through methods.\"\n    }, {\n      question: \"Which of the following is an access modifier?\",\n      options: [\"public\", \"static\", \"abstract\", \"main\"],\n      answer: \"public\",\n      explanation: \"`public` is an access modifier in Java. It allows a class, method, or variable to be accessed from any other class.\"\n    }, {\n      question: \"How do you inherit a class in Java?\",\n      options: [\"extends\", \"implements\", \"inherits\", \"super\"],\n      answer: \"extends\",\n      explanation: \"The `extends` keyword is used to inherit a class in Java. It allows a subclass to inherit properties and methods from a superclass.\"\n    }, {\n      question: \"What is method overloading?\",\n      options: [\"Creating multiple methods with the same name but different parameters\", \"Reusing methods from parent classes\", \"A function that modifies its behavior\", \"Overriding private methods\"],\n      answer: \"Creating multiple methods with the same name but different parameters\",\n      explanation: \"Method overloading in Java allows multiple methods to have the same name but different parameters. It is a form of compile-time polymorphism.\"\n    }, {\n      question: \"Which of these is NOT a pillar of OOP?\",\n      options: [\"Encapsulation\", \"Polymorphism\", \"Compilation\", \"Inheritance\"],\n      answer: \"Compilation\",\n      explanation: \"Compilation is not a pillar of OOP. The four pillars of OOP are Encapsulation, Inheritance, Polymorphism, and Abstraction.\"\n    }, {\n      question: \"How do you define a constructor in Java?\",\n      options: [\"static void Constructor() {}\", \"public static Constructor() {}\", \"public ClassName() {}\", \"void new() {}\"],\n      answer: \"public ClassName() {}\",\n      explanation: \"A constructor in Java is defined using the class name and does not have a return type. For example: `public ClassName() {}`.\"\n    }, {\n      question: \"What is a superclass in Java?\",\n      options: [\"A method\", \"A class that inherits\", \"A class that is extended by another class\", \"A class that cannot be instantiated\"],\n      answer: \"A class that is extended by another class\",\n      explanation: \"A superclass in Java is a class that is extended by another class (subclass). It provides properties and methods that the subclass can inherit.\"\n    }, {\n      question: \"Which method enables runtime polymorphism?\",\n      options: [\"method overloading\", \"method overriding\", \"method hiding\", \"constructor chaining\"],\n      answer: \"method overriding\",\n      explanation: \"Method overriding enables runtime polymorphism in Java. It allows a subclass to provide a specific implementation of a method that is already defined in its superclass.\"\n    }, {\n      question: \"What does the super keyword do?\",\n      options: [\"Calls the child class constructor\", \"Calls the parent class constructor/method\", \"Creates a new object\", \"Deletes an object\"],\n      answer: \"Calls the parent class constructor/method\",\n      explanation: \"The `super` keyword in Java is used to call the constructor or method of the parent class from the subclass.\"\n    }, {\n      question: \"Which of the following cannot be overridden?\",\n      options: [\"Static methods\", \"Public methods\", \"Private methods\", \"Protected methods\"],\n      answer: \"Static methods\",\n      explanation: \"Static methods in Java cannot be overridden because they belong to the class rather than an instance of the class.\"\n    }, {\n      question: \"What does final keyword do?\",\n      options: [\"Prevents method overriding\", \"Makes a variable mutable\", \"Allows changes at runtime\", \"Declares a new instance\"],\n      answer: \"Prevents method overriding\",\n      explanation: \"The `final` keyword in Java prevents method overriding, variable reassignment, and class inheritance.\"\n    }, {\n      question: \"What is the purpose of interfaces in Java?\",\n      options: [\"To create abstract classes\", \"To enable multiple inheritance\", \"To define class behavior\", \"To make classes static\"],\n      answer: \"To enable multiple inheritance\",\n      explanation: \"Interfaces in Java allow a class to implement multiple interfaces, enabling a form of multiple inheritance.\"\n    }, {\n      question: \"What is the default access modifier for a class?\",\n      options: [\"Package-private\", \"Private\", \"Public\", \"Protected\"],\n      answer: \"Package-private\",\n      explanation: \"The default access modifier for a class in Java is package-private. It means the class is accessible only within its package.\"\n    }],\n    3: [{\n      question: \"Which keyword is used to handle exceptions in Java?\",\n      options: [\"catch\", \"throw\", \"try\", \"finally\"],\n      answer: \"try\",\n      explanation: \"The `try` keyword is used to define a block of code that might throw an exception. It is followed by `catch` and/or `finally` blocks to handle the exception.\"\n    }, {\n      question: \"What is the purpose of the finally block in exception handling?\",\n      options: [\"To execute only if an exception occurs\", \"To execute only if no exception occurs\", \"To always execute regardless of exception\", \"To throw an exception\"],\n      answer: \"To always execute regardless of exception\",\n      explanation: \"The `finally` block is used to execute code that must run whether an exception occurs or not. It is often used for cleanup tasks like closing resources.\"\n    }, {\n      question: \"Which of the following is NOT a type of exception in Java?\",\n      options: [\"Checked Exception\", \"Unchecked Exception\", \"Runtime Exception\", \"Syntax Exception\"],\n      answer: \"Syntax Exception\",\n      explanation: \"Syntax errors are detected at compile time and are not considered exceptions in Java. Exceptions are runtime errors that occur during program execution.\"\n    }, {\n      question: \"What does the throws keyword do?\",\n      options: [\"Catches exceptions\", \"Declares exceptions that a method might throw\", \"Ignores exceptions\", \"Creates exceptions\"],\n      answer: \"Declares exceptions that a method might throw\",\n      explanation: \"The `throws` keyword is used in a method signature to declare that the method might throw one or more exceptions. It is used to propagate exceptions to the caller.\"\n    }, {\n      question: \"Which class is the parent of all exception classes in Java?\",\n      options: [\"Throwable\", \"Exception\", \"Error\", \"RuntimeException\"],\n      answer: \"Throwable\",\n      explanation: \"The `Throwable` class is the superclass of all errors and exceptions in Java. It has two main subclasses: `Error` and `Exception`.\"\n    }, {\n      question: \"Which Java statement is used to create a new file?\",\n      options: [\"File.create()\", \"new File()\", \"Files.createNewFile()\", \"File.write()\"],\n      answer: \"Files.createNewFile()\",\n      explanation: \"The `Files.createNewFile()` method is used to create a new file in Java. It returns `true` if the file was successfully created.\"\n    }, {\n      question: \"Which method is used to write text to a file in Java?\",\n      options: [\"writeText()\", \"FileWriter.write()\", \"write()\", \"print()\"],\n      answer: \"FileWriter.write()\",\n      explanation: \"The `FileWriter.write()` method is used to write text to a file. It writes characters to the file as specified by the `String` or `char` array.\"\n    }, {\n      question: \"Which stream is used for reading character data from a file?\",\n      options: [\"FileInputStream\", \"BufferedReader\", \"DataInputStream\", \"Scanner\"],\n      answer: \"BufferedReader\",\n      explanation: \"The `BufferedReader` class is used to read text from a character-input stream. It provides efficient reading of characters, arrays, and lines.\"\n    }, {\n      question: \"Which method reads a single character from a file in Java?\",\n      options: [\"read()\", \"nextChar()\", \"getChar()\", \"charAt()\"],\n      answer: \"read()\",\n      explanation: \"The `read()` method in `BufferedReader` reads a single character from the input stream and returns it as an integer.\"\n    }, {\n      question: \"Which keyword is used to manually throw an exception?\",\n      options: [\"throw\", \"throws\", \"catch\", \"exception\"],\n      answer: \"throw\",\n      explanation: \"The `throw` keyword is used to manually throw an exception in Java. It is typically used to throw custom exceptions or rethrow caught exceptions.\"\n    }, {\n      question: \"What is the default behavior of an uncaught exception?\",\n      options: [\"The program crashes\", \"The exception is ignored\", \"It gets logged\", \"It is automatically handled\"],\n      answer: \"The program crashes\",\n      explanation: \"If an exception is not caught, it propagates up the call stack and causes the program to terminate, resulting in a crash.\"\n    }, {\n      question: \"Which exception occurs when an invalid array index is accessed?\",\n      options: [\"ArrayIndexOutOfBoundsException\", \"NullPointerException\", \"IllegalArgumentException\", \"ArithmeticException\"],\n      answer: \"ArrayIndexOutOfBoundsException\",\n      explanation: \"The `ArrayIndexOutOfBoundsException` is thrown when an invalid index is used to access an array. The index is either negative or greater than or equal to the array size.\"\n    }, {\n      question: \"What happens if the file specified in FileReader does not exist?\",\n      options: [\"It creates a new file\", \"It throws a FileNotFoundException\", \"It ignores the error\", \"It returns null\"],\n      answer: \"It throws a FileNotFoundException\",\n      explanation: \"If the file specified in `FileReader` does not exist, a `FileNotFoundException` is thrown. This is a checked exception and must be handled.\"\n    }, {\n      question: \"Which exception occurs when dividing a number by zero?\",\n      options: [\"ArithmeticException\", \"NumberFormatException\", \"IOException\", \"NullPointerException\"],\n      answer: \"ArithmeticException\",\n      explanation: \"The `ArithmeticException` is thrown when an arithmetic operation fails, such as dividing an integer by zero.\"\n    }],\n    4: [{\n      question: \"Which Java class is used for creating a thread?\",\n      options: [\"Thread\", \"Runnable\", \"Process\", \"Task\"],\n      answer: \"Thread\",\n      explanation: \"The `Thread` class in Java is used to create and manage threads. It provides methods like `start()`, `run()`, and `join()` for thread management.\"\n    }, {\n      question: \"Which method is used to start a new thread?\",\n      options: [\"run()\", \"begin()\", \"execute()\", \"start()\"],\n      answer: \"start()\",\n      explanation: \"The `start()` method is used to start a new thread. It calls the `run()` method of the `Thread` class in a separate thread of execution.\"\n    }, {\n      question: \"What does the synchronized keyword do?\",\n      options: [\"Prevents deadlocks\", \"Ensures thread safety by locking a resource\", \"Stops a thread\", \"Runs a thread in the background\"],\n      answer: \"Ensures thread safety by locking a resource\",\n      explanation: \"The `synchronized` keyword is used to ensure thread safety by allowing only one thread to access a resource or block of code at a time.\"\n    }, {\n      question: \"Which method is called when a thread is stopped?\",\n      options: [\"stop()\", \"halt()\", \"terminate()\", \"None (Java does not support stopping a thread directly)\"],\n      answer: \"None (Java does not support stopping a thread directly)\",\n      explanation: \"Java does not provide a direct way to stop a thread. The `stop()` method is deprecated because it can leave the application in an inconsistent state.\"\n    }, {\n      question: \"Which of these is a valid thread state in Java?\",\n      options: [\"Executing\", \"Running\", \"Idle\", \"Waiting\"],\n      answer: \"Waiting\",\n      explanation: \"The `Waiting` state is a valid thread state in Java. A thread enters this state when it waits for another thread to perform a task.\"\n    }, {\n      question: \"Which Java interface must be implemented for multithreading?\",\n      options: [\"Threadable\", \"Runnable\", \"Executable\", \"Multithread\"],\n      answer: \"Runnable\",\n      explanation: \"The `Runnable` interface must be implemented to create a thread in Java. It defines a single method, `run()`, which contains the code executed by the thread.\"\n    }, {\n      question: \"Which method in Java is used to pause a thread?\",\n      options: [\"pause()\", \"sleep()\", \"wait()\", \"halt()\"],\n      answer: \"sleep()\",\n      explanation: \"The `sleep()` method is used to pause the execution of a thread for a specified amount of time. It does not release any locks.\"\n    }, {\n      question: \"Which method causes the current thread to wait until another thread finishes execution?\",\n      options: [\"wait()\", \"sleep()\", \"join()\", \"yield()\"],\n      answer: \"join()\",\n      explanation: \"The `join()` method causes the current thread to wait until the thread it is called on finishes execution.\"\n    }, {\n      question: \"Which class provides socket programming in Java?\",\n      options: [\"java.net.Socket\", \"java.io.Socket\", \"java.net.Connect\", \"java.net.Network\"],\n      answer: \"java.net.Socket\",\n      explanation: \"The `java.net.Socket` class is used for socket programming in Java. It provides a way to establish a connection between two machines over a network.\"\n    }, {\n      question: \"Which protocol is commonly used for client-server communication?\",\n      options: [\"HTTP\", \"FTP\", \"SMTP\", \"DNS\"],\n      answer: \"HTTP\",\n      explanation: \"HTTP (Hypertext Transfer Protocol) is commonly used for client-server communication, especially in web applications.\"\n    }, {\n      question: \"Which class is used to send data over a socket?\",\n      options: [\"SocketSender\", \"OutputStream\", \"DataTransfer\", \"SocketData\"],\n      answer: \"OutputStream\",\n      explanation: \"The `OutputStream` class is used to send data over a socket. It provides methods like `write()` to send bytes of data.\"\n    }, {\n      question: \"Which function waits for a client connection in socket programming?\",\n      options: [\"listen()\", \"wait()\", \"accept()\", \"connect()\"],\n      answer: \"accept()\",\n      explanation: \"The `accept()` method in the `ServerSocket` class waits for a client connection and returns a `Socket` object representing the connection.\"\n    }, {\n      question: \"Which function is used to close a socket connection?\",\n      options: [\"end()\", \"shutdown()\", \"close()\", \"disconnect()\"],\n      answer: \"close()\",\n      explanation: \"The `close()` method is used to close a socket connection. It releases the resources associated with the socket.\"\n    }, {\n      question: \"Which method allows one thread to pause execution and allow others to run?\",\n      options: [\"yield()\", \"wait()\", \"pause()\", \"stop()\"],\n      answer: \"yield()\",\n      explanation: \"The `yield()` method allows the current thread to pause its execution and give other threads a chance to run.\"\n    }, {\n      question: \"Which Java package contains the networking classes?\",\n      options: [\"java.net\", \"java.io\", \"java.lang\", \"java.utils\"],\n      answer: \"java.net\",\n      explanation: \"The `java.net` package contains classes for networking, such as `Socket`, `ServerSocket`, and `URL`.\"\n    }],\n    5: [{\n      question: \"Which Java GUI framework is built into Java?\",\n      options: [\"Swing\", \"JavaFX\", \"AWT\", \"All of the above\"],\n      answer: \"All of the above\",\n      explanation: \"Java provides multiple GUI frameworks, including Swing, JavaFX, and AWT, which are built into the Java Development Kit (JDK).\"\n    }, {\n      question: \"Which package is used for creating GUI applications in Java?\",\n      options: [\"java.awt\", \"javax.swing\", \"javafx\", \"All of the above\"],\n      answer: \"All of the above\",\n      explanation: \"Java provides multiple packages for GUI development, including `java.awt`, `javax.swing`, and `javafx`.\"\n    }, {\n      question: \"Which component is used to create a button in Swing?\",\n      options: [\"JButton\", \"Button\", \"SwingButton\", \"AWTButton\"],\n      answer: \"JButton\",\n      explanation: \"In Swing, the `JButton` class is used to create a button component.\"\n    }, {\n      question: \"Which method is used to set the visibility of a JFrame?\",\n      options: [\"setVisible()\", \"display()\", \"show()\", \"setFrame()\"],\n      answer: \"setVisible()\",\n      explanation: \"The `setVisible(true)` method is used to make a `JFrame` visible on the screen.\"\n    }, {\n      question: \"Which Swing container is the top-level container for GUI applications?\",\n      options: [\"JFrame\", \"JPanel\", \"JDialog\", \"JWindow\"],\n      answer: \"JFrame\",\n      explanation: \"`JFrame` is the top-level container in Swing, used as the main window for GUI applications.\"\n    }, {\n      question: \"Which layout manager arranges components in a single row or column?\",\n      options: [\"GridLayout\", \"BorderLayout\", \"FlowLayout\", \"CardLayout\"],\n      answer: \"FlowLayout\",\n      explanation: \"`FlowLayout` arranges components in a single row or column, depending on the available space.\"\n    }, {\n      question: \"Which method is used to add an event listener to a button?\",\n      options: [\"addActionListener()\", \"setEventListener()\", \"onClick()\", \"addListener()\"],\n      answer: \"addActionListener()\",\n      explanation: \"The `addActionListener()` method is used to attach an event listener to a button in Swing.\"\n    }, {\n      question: \"Which of these is NOT a layout manager in Java?\",\n      options: [\"BorderLayout\", \"GridLayout\", \"AbsoluteLayout\", \"SpringLayout\"],\n      answer: \"AbsoluteLayout\",\n      explanation: \"`AbsoluteLayout` is not a standard layout manager in Java. Instead, `null` layout is used for absolute positioning.\"\n    }, {\n      question: \"Which event class is used to handle button clicks?\",\n      options: [\"KeyEvent\", \"MouseEvent\", \"ActionEvent\", \"InputEvent\"],\n      answer: \"ActionEvent\",\n      explanation: \"The `ActionEvent` class is used to handle button click events in Java.\"\n    }, {\n      question: \"Which JavaFX class is the entry point for JavaFX applications?\",\n      options: [\"Application\", \"Scene\", \"Stage\", \"FXMain\"],\n      answer: \"Application\",\n      explanation: \"The `Application` class is the entry point for JavaFX applications. It provides the `start()` method to initialize the application.\"\n    }, {\n      question: \"Which method is used to set the title of a JFrame?\",\n      options: [\"setTitle()\", \"setFrameTitle()\", \"setWindowTitle()\", \"defineTitle()\"],\n      answer: \"setTitle()\",\n      explanation: \"The `setTitle()` method is used to set the title of a `JFrame`.\"\n    }, {\n      question: \"Which component is used to create a text field in Swing?\",\n      options: [\"JLabel\", \"JTextField\", \"JTextArea\", \"JInput\"],\n      answer: \"JTextField\",\n      explanation: \"The `JTextField` component is used to create a single-line text input field in Swing.\"\n    }, {\n      question: \"Which method is used to close a JavaFX application?\",\n      options: [\"exit()\", \"closeApp()\", \"stop()\", \"terminate()\"],\n      answer: \"stop()\",\n      explanation: \"The `stop()` method in the `Application` class is called when the JavaFX application is closed.\"\n    }, {\n      question: \"Which component is used to display a dialog box in Swing?\",\n      options: [\"JDialog\", \"JPopup\", \"JBox\", \"JFrame\"],\n      answer: \"JDialog\",\n      explanation: \"The `JDialog` component is used to create dialog boxes in Swing.\"\n    }, {\n      question: \"Which class is used for 2D graphics in Java?\",\n      options: [\"Graphics\", \"Graphics2D\", \"Drawing\", \"Canvas\"],\n      answer: \"Graphics2D\",\n      explanation: \"The `Graphics2D` class is used for rendering 2D shapes, text, and images in Java.\"\n    }],\n    6: [{\n      question: \"Which Java framework is commonly used for web development?\",\n      options: [\"Spring Boot\", \"Hibernate\", \"Struts\", \"All of the above\"],\n      answer: \"All of the above\",\n      explanation: \"Spring Boot, Hibernate, and Struts are all commonly used frameworks for Java web development.\"\n    }, {\n      question: \"What does Spring Boot simplify in Java web development?\",\n      options: [\"Dependency management\", \"Database connections\", \"RESTful API development\", \"All of the above\"],\n      answer: \"All of the above\",\n      explanation: \"Spring Boot simplifies dependency management, database connections, and RESTful API development through its auto-configuration and starter dependencies.\"\n    }, {\n      question: \"Which annotation marks a class as a Spring Boot application?\",\n      options: [\"@SpringApplication\", \"@SpringBootApplication\", \"@SpringConfig\", \"@EnableSpring\"],\n      answer: \"@SpringBootApplication\",\n      explanation: \"The `@SpringBootApplication` annotation is used to mark a class as the main entry point for a Spring Boot application.\"\n    }, {\n      question: \"Which Spring Boot module is used for RESTful APIs?\",\n      options: [\"Spring MVC\", \"Spring Data\", \"Spring Security\", \"Spring Core\"],\n      answer: \"Spring MVC\",\n      explanation: \"Spring MVC (Model-View-Controller) is used to build RESTful APIs in Spring Boot.\"\n    }, {\n      question: \"Which annotation is used to define a REST controller in Spring Boot?\",\n      options: [\"@Controller\", \"@RestController\", \"@SpringController\", \"@WebController\"],\n      answer: \"@RestController\",\n      explanation: \"The `@RestController` annotation is used to define a REST controller in Spring Boot.\"\n    }, {\n      question: \"Which HTTP method is used for retrieving data in REST APIs?\",\n      options: [\"POST\", \"DELETE\", \"GET\", \"PUT\"],\n      answer: \"GET\",\n      explanation: \"The `GET` HTTP method is used to retrieve data in REST APIs.\"\n    }, {\n      question: \"Which ORM framework is commonly used with Spring Boot?\",\n      options: [\"JPA\", \"Hibernate\", \"JDBC\", \"Both JPA and Hibernate\"],\n      answer: \"Both JPA and Hibernate\",\n      explanation: \"Spring Boot commonly uses JPA (Java Persistence API) and Hibernate for Object-Relational Mapping (ORM).\"\n    }, {\n      question: \"Which database is commonly used with Spring Boot?\",\n      options: [\"MySQL\", \"PostgreSQL\", \"MongoDB\", \"All of the above\"],\n      answer: \"All of the above\",\n      explanation: \"Spring Boot supports a wide range of databases, including MySQL, PostgreSQL, and MongoDB.\"\n    }, {\n      question: \"Which annotation maps a method to a specific HTTP request in Spring Boot?\",\n      options: [\"@RequestMapping\", \"@GetMapping\", \"@PostMapping\", \"All of the above\"],\n      answer: \"All of the above\",\n      explanation: \"Spring Boot provides annotations like `@RequestMapping`, `@GetMapping`, and `@PostMapping` to map methods to specific HTTP requests.\"\n    }, {\n      question: \"Which Spring Boot feature helps in automatic configuration?\",\n      options: [\"Spring Boot AutoConfig\", \"Spring Initializer\", \"Spring Boot Autoconfiguration\", \"Spring Boot Starter\"],\n      answer: \"Spring Boot Autoconfiguration\",\n      explanation: \"Spring Boot Autoconfiguration automatically configures the application based on the dependencies present in the classpath.\"\n    }, {\n      question: \"Which component of Spring Boot handles security?\",\n      options: [\"Spring Security\", \"Spring Guard\", \"Spring Auth\", \"Spring Access\"],\n      answer: \"Spring Security\",\n      explanation: \"Spring Security is the component of Spring Boot that handles authentication and authorization.\"\n    }, {\n      question: \"Which dependency is required for Spring Boot web applications?\",\n      options: [\"spring-boot-starter-web\", \"spring-core\", \"spring-boot-mvc\", \"spring-server\"],\n      answer: \"spring-boot-starter-web\",\n      explanation: \"The `spring-boot-starter-web` dependency is required for building web applications in Spring Boot.\"\n    }, {\n      question: \"Which file is used to configure a Spring Boot application?\",\n      options: [\"application.properties\", \"config.yaml\", \"settings.xml\", \"spring.xml\"],\n      answer: \"application.properties\",\n      explanation: \"The `application.properties` file is used to configure a Spring Boot application.\"\n    }, {\n      question: \"Which tool is used to create a Spring Boot project?\",\n      options: [\"Spring Initializr\", \"Spring Boot CLI\", \"Maven\", \"All of the above\"],\n      answer: \"All of the above\",\n      explanation: \"Spring Boot projects can be created using Spring Initializr, Spring Boot CLI, or Maven.\"\n    }, {\n      question: \"Which annotation is used for dependency injection in Spring Boot?\",\n      options: [\"@Autowired\", \"@Inject\", \"@Resource\", \"All of the above\"],\n      answer: \"All of the above\",\n      explanation: \"Spring Boot supports dependency injection using annotations like `@Autowired`, `@Inject`, and `@Resource`.\"\n    }]\n    // Add explanations for other modules and courses similarly...\n  }\n};\nconst shuffleArray = array => [...array].sort(() => Math.random() - 0.5);\n\n// Utility function to get 10 random questions\nconst getRandomQuestions = questions => {\n  return shuffleArray(questions).slice(0, 10).map(q => ({\n    ...q,\n    options: shuffleArray(q.options)\n  }));\n};\nconst Quiz = () => {\n  _s();\n  const {\n    courseName,\n    moduleId\n  } = useParams();\n  const navigate = useNavigate();\n  const [questions, setQuestions] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [score, setScore] = useState(0);\n  const [quizCompleted, setQuizCompleted] = useState(false);\n  const [incorrectAnswers, setIncorrectAnswers] = useState([]);\n\n  // Fetch questions for the current module\n  useEffect(() => {\n    if (!quizData[courseName] || !quizData[courseName][moduleId]) {\n      console.error(\"No quiz available for this module.\");\n      navigate(`/course/${courseName}/1`); // Redirect to the first module if invalid\n      return;\n    }\n    setQuestions(getRandomQuestions(quizData[courseName][moduleId]));\n  }, [courseName, moduleId, navigate]);\n\n  // Handle answer selection\n  const handleAnswer = option => {\n    if (selectedAnswer !== null) return; // Prevent multiple selections\n    setSelectedAnswer(option);\n    const currentQuestion = questions[currentIndex];\n    if (option === currentQuestion.answer) {\n      setScore(prev => prev + 1);\n    } else {\n      setIncorrectAnswers(prev => [...prev, {\n        question: currentQuestion.question,\n        correctAnswer: currentQuestion.answer,\n        explanation: currentQuestion.explanation || \"No explanation provided.\"\n      }]);\n    }\n  };\n\n  // Move to the next question or finish the quiz\n  const handleNext = () => {\n    if (currentIndex + 1 < questions.length) {\n      setCurrentIndex(prev => prev + 1);\n      setSelectedAnswer(null);\n    } else {\n      setQuizCompleted(true);\n    }\n  };\n\n  // Retry the quiz\n  const handleRetryQuiz = () => {\n    setCurrentIndex(0);\n    setSelectedAnswer(null);\n    setScore(0);\n    setQuizCompleted(false);\n    setIncorrectAnswers([]);\n    setQuestions(getRandomQuestions(quizData[courseName][moduleId]));\n  };\n\n  // Proceed to the next module\n  const handleQuizCompletion = () => {\n    const nextModule = Math.min(6, parseInt(moduleId) + 1);\n    navigate(`/course/${courseName}/${nextModule}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: !quizCompleted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Quiz for \", courseName, \" - Module \", moduleId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1196,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Question \", currentIndex + 1, \" of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1197,\n        columnNumber: 11\n      }, this), questions.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: questions[currentIndex].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1203,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1202,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"options-list\",\n          children: questions[currentIndex].options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `option-item ${selectedAnswer ? option === selectedAnswer ? \"selected\" : option === questions[currentIndex].answer ? \"correct\" : \"\" : \"\"}`,\n            onClick: () => handleAnswer(option),\n            children: option\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1207,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1205,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next-btn\",\n        onClick: handleNext,\n        disabled: selectedAnswer === null,\n        children: currentIndex + 1 < questions.length ? \"Next Question\" : \"Finish Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1226,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(QuizConclusion, {\n      score: score,\n      totalQuestions: questions.length,\n      incorrectAnswers: incorrectAnswers,\n      onRetry: handleRetryQuiz,\n      onNext: handleQuizCompletion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1235,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1193,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"VuZGnMrmQODVEgG1uNKzWnojmIA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["useParams","useNavigate","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","quizData","Python","question","options","answer","explanation","Java","shuffleArray","array","sort","Math","random","getRandomQuestions","questions","slice","map","q","Quiz","_s","courseName","moduleId","navigate","setQuestions","currentIndex","setCurrentIndex","selectedAnswer","setSelectedAnswer","score","setScore","quizCompleted","setQuizCompleted","incorrectAnswers","setIncorrectAnswers","console","error","handleAnswer","option","currentQuestion","prev","correctAnswer","handleNext","length","handleRetryQuiz","handleQuizCompletion","nextModule","min","parseInt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","idx","onClick","disabled","QuizConclusion","totalQuestions","onRetry","onNext","_c","$RefreshReg$"],"sources":["C:/Users/david/OneDrive/Desktop/learning tutor/Karunya_Project_X/frontend/src/components/Quiz.js"],"sourcesContent":["import { useParams, useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport \"./quiz.css\"\n\n// Define the quiz data with 15 questions per module\nconst quizData = {\n  Python: {\n    1: [\n      {\n        question: \"Who created Python?\",\n        options: [\"Guido van Rossum\", \"James Gosling\", \"Dennis Ritchie\", \"Bjarne Stroustrup\"],\n        answer: \"Guido van Rossum\",\n        explanation: \"Guido van Rossum created Python in the late 1980s. He is often referred to as Python's 'Benevolent Dictator For Life' (BDFL).\"\n      },\n      {\n        question: \"Which Python version introduced pattern matching?\",\n        options: [\"Python 2.7\", \"Python 3.6\", \"Python 3.9\", \"Python 3.10\"],\n        answer: \"Python 3.10\",\n        explanation: \"Pattern matching was introduced in Python 3.10 as part of PEP 634. It allows for more expressive and readable code when working with complex data structures.\"\n      },\n      {\n        question: \"What is NOT a key feature of Python?\",\n        options: [\"Readability\", \"Dynamically typed\", \"Strong typing\", \"Complex syntax\"],\n        answer: \"Complex syntax\",\n        explanation: \"Python is known for its simplicity and readability, not complex syntax. Its syntax is designed to be intuitive and easy to understand.\"\n      },\n      {\n        question: \"What does the `len()` function do?\",\n        options: [\"Counts items in a list\", \"Finds maximum value\", \"Checks if a variable is None\", \"Reverses a string\"],\n        answer: \"Counts items in a list\",\n        explanation: \"The `len()` function returns the number of items in an object, such as a list, tuple, or string.\"\n      },\n      {\n        question: \"What will `5 ** 2` return?\",\n        options: [\"25\", \"10\", \"5\", \"2.5\"],\n        answer: \"25\",\n        explanation: \"The `**` operator is used for exponentiation in Python. `5 ** 2` means 5 raised to the power of 2, which is 25.\"\n      },\n      {\n        question: \"Which statement is used for loops in Python?\",\n        options: [\"for\", \"loop\", \"repeat\", \"iterate\"],\n        answer: \"for\",\n        explanation: \"The `for` statement is used to iterate over a sequence (like a list, tuple, or string) in Python.\"\n      },\n      {\n        question: \"Which of these is not a Python data type?\",\n        options: [\"List\", \"Tuple\", \"Class\", \"Enum\"],\n        answer: \"Enum\",\n        explanation: \"While Python supports lists, tuples, and classes, `Enum` is not a built-in data type. It is available in the `enum` module.\"\n      },\n      {\n        question: \"What does the `continue` statement do?\",\n        options: [\"Exits the loop\", \"Skips the current iteration\", \"Repeats the loop\", \"Breaks the loop\"],\n        answer: \"Skips the current iteration\",\n        explanation: \"The `continue` statement skips the rest of the code inside the loop for the current iteration and moves to the next iteration.\"\n      },\n      {\n        question: \"What does `self` refer to in Python classes?\",\n        options: [\"The current class\", \"The previous object\", \"The current instance\", \"The superclass\"],\n        answer: \"The current instance\",\n        explanation: \"In Python, `self` refers to the current instance of the class. It is used to access variables and methods associated with the instance.\"\n      },\n      {\n        question: \"How do you declare a function in Python?\",\n        options: [\"def func():\", \"function func() {}\", \"funct func() {}\", \"void func()\"],\n        answer: \"def func():\",\n        explanation: \"In Python, functions are declared using the `def` keyword, followed by the function name and parentheses.\"\n      },\n      {\n        question: \"Which module is used for regular expressions in Python?\",\n        options: [\"regex\", \"re\", \"regularex\", \"pattern\"],\n        answer: \"re\",\n        explanation: \"The `re` module provides support for regular expressions in Python, allowing pattern matching and text manipulation.\"\n      },\n      {\n        question: \"Which keyword is used to create a function?\",\n        options: [\"function\", \"def\", \"lambda\", \"create\"],\n        answer: \"def\",\n        explanation: \"The `def` keyword is used to define a function in Python.\"\n      },\n      {\n        question: \"What does the `is` keyword check?\",\n        options: [\"Value equality\", \"Reference equality\", \"Identity equality\", \"Type checking\"],\n        answer: \"Identity equality\",\n        explanation: \"The `is` keyword checks if two variables point to the same object in memory (identity equality), not if their values are equal.\"\n      },\n      {\n        question: \"Which data structure allows duplicate values?\",\n        options: [\"Set\", \"Tuple\", \"List\", \"Dictionary\"],\n        answer: \"List\",\n        explanation: \"Lists in Python allow duplicate values, whereas sets and dictionaries do not.\"\n      },\n      {\n        question: \"How do you start a comment in Python?\",\n        options: [\"//\", \"/* */\", \"#\", \"--\"],\n        answer: \"#\",\n        explanation: \"In Python, comments start with the `#` symbol. Multi-line comments are not natively supported but can be simulated using triple quotes.\"\n      },\n    ],\n    2: [\n      {\n        question: \"Which of these is used to store key-value pairs in Python?\",\n        options: [\"List\", \"Tuple\", \"Dictionary\", \"Set\"],\n        answer: \"Dictionary\",\n        explanation: \"Dictionaries in Python store data as key-value pairs, making them ideal for mapping relationships.\"\n      },\n      {\n        question: \"Which method removes whitespace from a string?\",\n        options: [\"strip()\", \"trim()\", \"remove()\", \"clean()\"],\n        answer: \"strip()\",\n        explanation: \"The `strip()` method removes leading and trailing whitespace from a string.\"\n      },\n      {\n        question: \"How do you open a file in read mode?\",\n        options: [\"open('file.txt', 'r')\", \"open('file.txt')\", \"open('file.txt', 'w')\", \"file('file.txt')\"],\n        answer: \"open('file.txt', 'r')\",\n        explanation: \"The `open()` function with the mode `'r'` opens a file in read mode.\"\n      },\n      {\n        question: \"Which data structure ensures unique values?\",\n        options: [\"List\", \"Tuple\", \"Set\", \"Dictionary\"],\n        answer: \"Set\",\n        explanation: \"Sets in Python ensure that all elements are unique. Duplicate values are automatically removed.\"\n      },\n      {\n        question: \"Which of these is immutable?\",\n        options: [\"List\", \"Set\", \"Dictionary\", \"Tuple\"],\n        answer: \"Tuple\",\n        explanation: \"Tuples are immutable in Python, meaning their contents cannot be changed after creation.\"\n      },\n      {\n        question: \"Which of the following is used to find the length of a list?\",\n        options: [\"size()\", \"count()\", \"len()\", \"length()\"],\n        answer: \"len()\",\n        explanation: \"The `len()` function returns the number of items in a list or other iterable.\"\n      },\n      {\n        question: \"What is the default mode for opening a file in Python?\",\n        options: [\"r\", \"w\", \"a\", \"rw\"],\n        answer: \"r\",\n        explanation: \"The default mode for the `open()` function is `'r'`, which stands for read mode.\"\n      },\n      {\n        question: \"Which function removes an item from a list?\",\n        options: [\"delete()\", \"remove()\", \"erase()\", \"discard()\"],\n        answer: \"remove()\",\n        explanation: \"The `remove()` method removes the first occurrence of a specified value from a list.\"\n      },\n      {\n        question: \"Which function returns the highest value in a list?\",\n        options: [\"min()\", \"high()\", \"max()\", \"top()\"],\n        answer: \"max()\",\n        explanation: \"The `max()` function returns the largest item in an iterable or the largest of two or more arguments.\"\n      },\n      {\n        question: \"How do you sort a list in ascending order?\",\n        options: [\"sort()\", \"order()\", \"ascending()\", \"arrange()\"],\n        answer: \"sort()\",\n        explanation: \"The `sort()` method sorts the list in place in ascending order by default.\"\n      },\n      {\n        question: \"Which method converts a string to lowercase?\",\n        options: [\"lower()\", \"small()\", \"down()\", \"case()\"],\n        answer: \"lower()\",\n        explanation: \"The `lower()` method converts all characters in a string to lowercase.\"\n      },\n      {\n        question: \"What does `split()` method do?\",\n        options: [\"Splits a string into words\", \"Combines two strings\", \"Reverses a string\", \"Removes spaces\"],\n        answer: \"Splits a string into words\",\n        explanation: \"The `split()` method splits a string into a list of substrings based on a specified delimiter (default is whitespace).\"\n      },\n      {\n        question: \"Which of the following methods returns a copy of the string with all occurrences of a substring replaced?\",\n        options: [\"replace()\", \"swap()\", \"change()\", \"sub()\"],\n        answer: \"replace()\",\n        explanation: \"The `replace()` method returns a new string with all occurrences of a substring replaced by another substring.\"\n      },\n      {\n        question: \"Which statement is used to check if a key exists in a dictionary?\",\n        options: [\"if key in dict\", \"if dict contains key\", \"if dict.has_key(key)\", \"if key exists in dict\"],\n        answer: \"if key in dict\",\n        explanation: \"The `in` keyword is used to check if a key exists in a dictionary.\"\n      },\n      {\n        question: \"Which function adds an element to the end of a list?\",\n        options: [\"push()\", \"append()\", \"insert()\", \"add()\"],\n        answer: \"append()\",\n        explanation: \"The `append()` method adds an element to the end of a list.\"\n      },\n    ],\n    // Add explanations for other modules and courses similarly... {\n        3: [\n          {\n            question: \"Which keyword defines a function in Python?\",\n            options: [\"function\", \"def\", \"define\", \"func\"],\n            answer: \"def\",\n            explanation: \"In Python, the `def` keyword is used to define a function. For example: `def my_function():`.\"\n          },\n          {\n            question: \"What is the purpose of a class in Python?\",\n            options: [\"To store multiple values\", \"To define a blueprint for objects\", \"To execute functions\", \"To perform calculations\"],\n            answer: \"To define a blueprint for objects\",\n            explanation: \"A class in Python is a blueprint for creating objects. It defines the properties and behaviors that the objects created from the class will have.\"\n          },\n          {\n            question: \"Which method is called when an object is created?\",\n            options: [\"__start__\", \"__new__\", \"__init__\", \"__create__\"],\n            answer: \"__init__\",\n            explanation: \"The `__init__` method is called when an object is created. It is used to initialize the object's attributes.\"\n          },\n          {\n            question: \"Which principle allows different classes to have the same method?\",\n            options: [\"Encapsulation\", \"Polymorphism\", \"Inheritance\", \"Abstraction\"],\n            answer: \"Polymorphism\",\n            explanation: \"Polymorphism allows different classes to have methods with the same name but different implementations.\"\n          },\n          {\n            question: \"Which function raises an exception in Python?\",\n            options: [\"throw\", \"raise\", \"error\", \"exception\"],\n            answer: \"raise\",\n            explanation: \"The `raise` keyword is used to raise an exception in Python. For example: `raise ValueError('Invalid value')`.\"\n          },\n          {\n            question: \"Which keyword is used to inherit a class?\",\n            options: [\"extends\", \"inherits\", \"super\", \"class\"],\n            answer: \"class\",\n            explanation: \"In Python, the `class` keyword is used to define a class, and inheritance is achieved by specifying the parent class in parentheses. For example: `class ChildClass(ParentClass):`.\"\n          },\n          {\n            question: \"How do you define a constructor in Python?\",\n            options: [\"def init()\", \"def __init__()\", \"def constructor()\", \"def new()\"],\n            answer: \"def __init__()\",\n            explanation: \"The constructor in Python is defined using the `__init__` method. It is automatically called when a new object is created.\"\n          },\n          {\n            question: \"What is encapsulation in Python?\",\n            options: [\"Hiding implementation details\", \"Reusing code\", \"Making variables public\", \"None of the above\"],\n            answer: \"Hiding implementation details\",\n            explanation: \"Encapsulation is the concept of hiding the internal details of an object and exposing only the necessary functionality.\"\n          },\n          {\n            question: \"Which symbol is used for method overriding in Python?\",\n            options: [\"@\", \"#\", \"override\", \"None\"],\n            answer: \"None\",\n            explanation: \"Python does not use a specific symbol for method overriding. Overriding is achieved by defining a method in the child class with the same name as in the parent class.\"\n          },\n          {\n            question: \"Which method returns the length of a list?\",\n            options: [\"size()\", \"len()\", \"count()\", \"length()\"],\n            answer: \"len()\",\n            explanation: \"The `len()` function returns the number of items in a list or other iterable.\"\n          },\n          {\n            question: \"Which function is used to delete an object?\",\n            options: [\"delete()\", \"del()\", \"remove()\", \"erase()\"],\n            answer: \"del()\",\n            explanation: \"The `del` keyword is used to delete an object in Python. For example: `del my_object`.\"\n          },\n          {\n            question: \"What is the superclass of all classes in Python?\",\n            options: [\"BaseClass\", \"Root\", \"Object\", \"Super\"],\n            answer: \"Object\",\n            explanation: \"In Python, the `object` class is the superclass of all classes. It is the root of the class hierarchy.\"\n          },\n          {\n            question: \"Which function is used to check if an object is an instance of a class?\",\n            options: [\"isInstance()\", \"checkType()\", \"instanceof()\", \"isinstance()\"],\n            answer: \"isinstance()\",\n            explanation: \"The `isinstance()` function checks if an object is an instance of a specific class or a tuple of classes.\"\n          },\n          {\n            question: \"Which keyword is used to define a static method?\",\n            options: [\"@staticmethod\", \"@class\", \"@static\", \"@func\"],\n            answer: \"@staticmethod\",\n            explanation: \"The `@staticmethod` decorator is used to define a static method in Python. Static methods do not require a reference to the instance or class.\"\n          },\n          {\n            question: \"Which method is called to destroy an object?\",\n            options: [\"destroy()\", \"remove()\", \"__del__()\", \"delete()\"],\n            answer: \"__del__()\",\n            explanation: \"The `__del__` method is called when an object is about to be destroyed. It is used to perform cleanup actions.\"\n          },\n        ],\n        4: [\n          {\n            question: \"Which Python module is used for turtle graphics?\",\n            options: [\"graphics\", \"draw\", \"turtle\", \"paint\"],\n            answer: \"turtle\",\n            explanation: \"The `turtle` module is used for creating graphics and drawings in Python. It provides a simple way to create shapes and patterns.\"\n          },\n          {\n            question: \"What does the PIL library help with?\",\n            options: [\"File management\", \"Image processing\", \"Machine learning\", \"Data visualization\"],\n            answer: \"Image processing\",\n            explanation: \"PIL (Python Imaging Library) is used for image processing tasks such as opening, manipulating, and saving images.\"\n          },\n          {\n            question: \"Which function is used to convert an image to grayscale?\",\n            options: [\"convert('L')\", \"grayscale()\", \"change_gray()\", \"set_gray()\"],\n            answer: \"convert('L')\",\n            explanation: \"The `convert('L')` function in PIL converts an image to grayscale. The 'L' mode stands for luminance.\"\n          },\n          {\n            question: \"Which library is used for opening image files in Python?\",\n            options: [\"Pandas\", \"Matplotlib\", \"PIL\", \"Seaborn\"],\n            answer: \"PIL\",\n            explanation: \"The PIL (Python Imaging Library) is used for opening, manipulating, and saving image files.\"\n          },\n          {\n            question: \"Which shape can be drawn using turtle graphics?\",\n            options: [\"Circle\", \"Rectangle\", \"Polygon\", \"All of the above\"],\n            answer: \"All of the above\",\n            explanation: \"The `turtle` module can be used to draw various shapes, including circles, rectangles, and polygons.\"\n          },\n          {\n            question: \"Which function is used to display an image using PIL?\",\n            options: [\"show()\", \"display()\", \"render()\", \"draw()\"],\n            answer: \"show()\",\n            explanation: \"The `show()` function in PIL displays an image using the default image viewer.\"\n          },\n          {\n            question: \"Which method is used to load an image in PIL?\",\n            options: [\"Image.open()\", \"openImage()\", \"load()\", \"readImage()\"],\n            answer: \"Image.open()\",\n            explanation: \"The `Image.open()` function is used to load an image from a file in PIL.\"\n          },\n          {\n            question: \"Which function saves an image in PIL?\",\n            options: [\"save()\", \"export()\", \"write()\", \"store()\"],\n            answer: \"save()\",\n            explanation: \"The `save()` function in PIL is used to save an image to a file.\"\n          },\n          {\n            question: \"Which function draws a rectangle using turtle?\",\n            options: [\"drawRectangle()\", \"rectangle()\", \"rect()\", \"turtle.forward()\"],\n            answer: \"turtle.forward()\",\n            explanation: \"The `turtle.forward()` function is used to move the turtle forward, which can be used to draw shapes like rectangles.\"\n          },\n          {\n            question: \"Which color mode does PIL support?\",\n            options: [\"RGB\", \"CMYK\", \"L\", \"All of the above\"],\n            answer: \"All of the above\",\n            explanation: \"PIL supports multiple color modes, including RGB, CMYK, and grayscale (L).\"\n          },\n          {\n            question: \"Which function is used to draw a circle in turtle?\",\n            options: [\"circle()\", \"drawCircle()\", \"ellipse()\", \"oval()\"],\n            answer: \"circle()\",\n            explanation: \"The `circle()` function in the `turtle` module is used to draw a circle with a specified radius.\"\n          },\n          {\n            question: \"Which function rotates an image using PIL?\",\n            options: [\"rotate()\", \"turn()\", \"flip()\", \"spin()\"],\n            answer: \"rotate()\",\n            explanation: \"The `rotate()` function in PIL rotates an image by a specified angle.\"\n          },\n          {\n            question: \"Which function resizes an image using PIL?\",\n            options: [\"resize()\", \"scale()\", \"zoom()\", \"fit()\"],\n            answer: \"resize()\",\n            explanation: \"The `resize()` function in PIL resizes an image to the specified dimensions.\"\n          },\n          {\n            question: \"Which function pastes one image onto another in PIL?\",\n            options: [\"paste()\", \"overlay()\", \"merge()\", \"combine()\"],\n            answer: \"paste()\",\n            explanation: \"The `paste()` function in PIL is used to paste one image onto another at a specified position.\"\n          },\n          {\n            question: \"Which function converts an image to black and white?\",\n            options: [\"convert('1')\", \"bw()\", \"grayscale()\", \"mono()\"],\n            answer: \"convert('1')\",\n            explanation: \"The `convert('1')` function in PIL converts an image to black and white (1-bit pixels).\"\n          },\n        ],\n        5: [\n          {\n            question: \"Which module is used for GUI programming in Python?\",\n            options: [\"PyGUI\", \"Tkinter\", \"GUIX\", \"Pandas\"],\n            answer: \"Tkinter\",\n            explanation: \"The `Tkinter` module is the standard Python interface to the Tk GUI toolkit. It is widely used for creating desktop applications with graphical user interfaces.\"\n          },\n          {\n            question: \"Which Tkinter method creates a button?\",\n            options: [\"Button()\", \"create_button()\", \"make_button()\", \"btn()\"],\n            answer: \"Button()\",\n            explanation: \"The `Button()` method in Tkinter is used to create a button widget. It takes parameters like text, command, and style to customize the button.\"\n          },\n          {\n            question: \"Which method in Tkinter is used to start the GUI loop?\",\n            options: [\"start()\", \"begin()\", \"mainloop()\", \"run()\"],\n            answer: \"mainloop()\",\n            explanation: \"The `mainloop()` method in Tkinter starts the event loop, which waits for user interaction and updates the GUI accordingly.\"\n          },\n          {\n            question: \"Which layout manager in Tkinter arranges widgets in a table?\",\n            options: [\"pack()\", \"grid()\", \"place()\", \"align()\"],\n            answer: \"grid()\",\n            explanation: \"The `grid()` layout manager arranges widgets in a table-like structure with rows and columns, making it easy to align widgets.\"\n          },\n          {\n            question: \"Which database is commonly used with Tkinter for storing data?\",\n            options: [\"MongoDB\", \"SQLite\", \"PostgreSQL\", \"Firebase\"],\n            answer: \"SQLite\",\n            explanation: \"SQLite is a lightweight, file-based database commonly used with Tkinter for storing data locally in desktop applications.\"\n          },\n          {\n            question: \"Which Tkinter widget is used for creating an input field?\",\n            options: [\"Label\", \"Button\", \"Entry\", \"Frame\"],\n            answer: \"Entry\",\n            explanation: \"The `Entry` widget in Tkinter is used to create a single-line text input field where users can enter data.\"\n          },\n          {\n            question: \"Which function is used to change the text in a Tkinter label?\",\n            options: [\"set()\", \"configure()\", \"change()\", \"modify()\"],\n            answer: \"configure()\",\n            explanation: \"The `configure()` method is used to change the properties of a widget, such as the text of a label, after it has been created.\"\n          },\n          {\n            question: \"Which event is triggered when a button is clicked in Tkinter?\",\n            options: [\"onClick\", \"click\", \"press\", \"command\"],\n            answer: \"command\",\n            explanation: \"The `command` parameter in a button widget specifies the function to be called when the button is clicked.\"\n          },\n          {\n            question: \"Which function is used to display a message box in Tkinter?\",\n            options: [\"showMessage()\", \"messageBox()\", \"messagebox.showinfo()\", \"infoBox()\"],\n            answer: \"messagebox.showinfo()\",\n            explanation: \"The `messagebox.showinfo()` function in Tkinter displays a message box with an informational message and an OK button.\"\n          },\n          {\n            question: \"Which geometry manager places widgets at absolute positions?\",\n            options: [\"pack()\", \"grid()\", \"place()\", \"align()\"],\n            answer: \"place()\",\n            explanation: \"The `place()` geometry manager allows you to place widgets at specific (x, y) coordinates within the window.\"\n          },\n          {\n            question: \"Which function is used to change the background color of a Tkinter window?\",\n            options: [\"setBg()\", \"bgcolor()\", \"config(bg='color')\", \"setBackground()\"],\n            answer: \"config(bg='color')\",\n            explanation: \"The `config()` method is used to change the background color of a Tkinter window by setting the `bg` parameter.\"\n          },\n          {\n            question: \"Which function in Tkinter creates a dropdown menu?\",\n            options: [\"Dropdown()\", \"Select()\", \"Menu()\", \"OptionMenu()\"],\n            answer: \"OptionMenu()\",\n            explanation: \"The `OptionMenu()` widget in Tkinter is used to create a dropdown menu with a list of options for the user to choose from.\"\n          },\n          {\n            question: \"Which function is used to close a Tkinter window?\",\n            options: [\"close()\", \"destroy()\", \"exit()\", \"quit()\"],\n            answer: \"destroy()\",\n            explanation: \"The `destroy()` method is used to close a Tkinter window. It terminates the main loop and closes the application.\"\n          },\n          {\n            question: \"Which module in Tkinter allows creating canvas-based graphics?\",\n            options: [\"Draw\", \"Canvas\", \"Paint\", \"Graph\"],\n            answer: \"Canvas\",\n            explanation: \"The `Canvas` widget in Tkinter is used to create canvas-based graphics, such as lines, shapes, and images.\"\n          },\n          {\n            question: \"Which method is used to bind keyboard events in Tkinter?\",\n            options: [\"bind()\", \"keypress()\", \"attach()\", \"listen()\"],\n            answer: \"bind()\",\n            explanation: \"The `bind()` method is used to bind keyboard or mouse events to a function in Tkinter. For example, `bind('<Key>', callback)`.\"\n          },\n        ],\n        6: [\n          {\n            question: \"Which module in Python is used for multithreading?\",\n            options: [\"threading\", \"multiprocess\", \"parallel\", \"async\"],\n            answer: \"threading\",\n            explanation: \"The `threading` module in Python is used to create and manage threads, allowing concurrent execution of tasks.\"\n          },\n          {\n            question: \"Which Python module is used for socket programming?\",\n            options: [\"os\", \"sys\", \"socket\", \"requests\"],\n            answer: \"socket\",\n            explanation: \"The `socket` module in Python provides low-level networking interfaces for socket programming, enabling communication between devices over a network.\"\n          },\n          {\n            question: \"Which function is used to make a thread sleep?\",\n            options: [\"wait()\", \"pause()\", \"delay()\", \"sleep()\"],\n            answer: \"sleep()\",\n            explanation: \"The `sleep()` function from the `time` module is used to pause the execution of a thread for a specified number of seconds.\"\n          },\n          {\n            question: \"Which communication model does socket programming use?\",\n            options: [\"Client-Server\", \"Peer-to-Peer\", \"Standalone\", \"Single-Process\"],\n            answer: \"Client-Server\",\n            explanation: \"Socket programming typically uses the client-server model, where a server listens for connections and clients connect to the server to exchange data.\"\n          },\n          {\n            question: \"Which function is used to create a new thread?\",\n            options: [\"threading.Thread()\", \"new_thread()\", \"spawn_thread()\", \"createThread()\"],\n            answer: \"threading.Thread()\",\n            explanation: \"The `threading.Thread()` function is used to create a new thread in Python. It takes a target function to execute in the new thread.\"\n          },\n          {\n            question: \"Which method starts a new thread?\",\n            options: [\"run()\", \"start()\", \"execute()\", \"begin()\"],\n            answer: \"start()\",\n            explanation: \"The `start()` method of a `Thread` object starts the thread's execution by calling its `run()` method.\"\n          },\n          {\n            question: \"Which method is used to wait for a thread to complete?\",\n            options: [\"join()\", \"wait()\", \"sleep()\", \"pause()\"],\n            answer: \"join()\",\n            explanation: \"The `join()` method is used to wait for a thread to complete its execution before proceeding further in the main program.\"\n          },\n          {\n            question: \"Which function in socket programming binds the server to an address?\",\n            options: [\"bind()\", \"connect()\", \"attach()\", \"listen()\"],\n            answer: \"bind()\",\n            explanation: \"The `bind()` function associates a socket with a specific IP address and port number, allowing it to listen for incoming connections.\"\n          },\n          {\n            question: \"Which function listens for incoming connections?\",\n            options: [\"listen()\", \"accept()\", \"bind()\", \"connect()\"],\n            answer: \"listen()\",\n            explanation: \"The `listen()` function puts the server socket in a listening state, allowing it to accept incoming client connections.\"\n          },\n          {\n            question: \"Which method in socket programming closes a connection?\",\n            options: [\"disconnect()\", \"end()\", \"close()\", \"terminate()\"],\n            answer: \"close()\",\n            explanation: \"The `close()` method is used to close a socket connection, releasing the resources associated with it.\"\n          },\n          {\n            question: \"Which module in Python provides a high-level API for concurrency?\",\n            options: [\"asyncio\", \"concurrent\", \"multiprocessing\", \"threading\"],\n            answer: \"asyncio\",\n            explanation: \"The `asyncio` module provides a high-level API for writing asynchronous and concurrent code using `async` and `await`.\"\n          },\n          {\n            question: \"Which function is used to send data over a socket?\",\n            options: [\"send()\", \"write()\", \"transmit()\", \"push()\"],\n            answer: \"send()\",\n            explanation: \"The `send()` function is used to send data over a connected socket. It transmits bytes to the remote endpoint.\"\n          },\n          {\n            question: \"Which function is used to receive data over a socket?\",\n            options: [\"receive()\", \"read()\", \"recv()\", \"fetch()\"],\n            answer: \"recv()\",\n            explanation: \"The `recv()` function is used to receive data from a connected socket. It reads bytes sent by the remote endpoint.\"\n          },\n          {\n            question: \"Which function is used to set a socket in non-blocking mode?\",\n            options: [\"nonblock()\", \"setblocking(0)\", \"async()\", \"enable_async()\"],\n            answer: \"setblocking(0)\",\n            explanation: \"The `setblocking(0)` function sets a socket to non-blocking mode, allowing it to return immediately without waiting for data.\"\n          },\n          {\n            question: \"Which method is used to get the IP address of a hostname?\",\n            options: [\"gethostbyname()\", \"resolveIP()\", \"findIP()\", \"hostnameIP()\"],\n            answer: \"gethostbyname()\",\n            explanation: \"The `gethostbyname()` function resolves a hostname to its corresponding IP address using DNS.\"\n          },\n        ],\n    \n  },\n  Java: {\n    1: [\n      {\n        question: \"Who created Java?\",\n        options: [\"Brendan Eich\", \"James Gosling\", \"Dennis Ritchie\", \"Bjarne Stroustrup\"],\n        answer: \"James Gosling\",\n        explanation: \"James Gosling created Java in the mid-1990s while working at Sun Microsystems. It was originally designed for interactive television but later became a general-purpose programming language.\"\n      },\n      {\n        question: \"What is the default value of an int variable in Java?\",\n        options: [\"0\", \"null\", \"undefined\", \"1\"],\n        answer: \"0\",\n        explanation: \"In Java, the default value of an `int` variable is `0` if it is not explicitly initialized. This applies to instance variables and static variables.\"\n      },\n      {\n        question: \"Which package is imported by default in every Java program?\",\n        options: [\"java.util\", \"java.io\", \"java.lang\", \"java.net\"],\n        answer: \"java.lang\",\n        explanation: \"The `java.lang` package is automatically imported into every Java program. It contains fundamental classes like `String`, `Object`, and `System`.\"\n      },\n      {\n        question: \"Which keyword is used to define a constant in Java?\",\n        options: [\"const\", \"final\", \"constant\", \"static\"],\n        answer: \"final\",\n        explanation: \"The `final` keyword is used to define a constant in Java. Once a variable is declared as `final`, its value cannot be changed.\"\n      },\n      {\n        question: \"What is the superclass of all Java classes?\",\n        options: [\"Object\", \"Main\", \"Super\", \"Base\"],\n        answer: \"Object\",\n        explanation: \"The `Object` class is the superclass of all classes in Java. It is the root of the class hierarchy and provides methods like `equals()`, `hashCode()`, and `toString()`.\"\n      },\n      {\n        question: \"Which operator is used for bitwise AND?\",\n        options: [\"&\", \"|\", \"^\", \"%\"],\n        answer: \"&\",\n        explanation: \"The `&` operator is used for bitwise AND operations in Java. It compares each bit of two numbers and returns `1` if both bits are `1`, otherwise `0`.\"\n      },\n      {\n        question: \"What is a constructor in Java?\",\n        options: [\"A method that initializes an object\", \"A variable that holds an object\", \"A class method\", \"A loop\"],\n        answer: \"A method that initializes an object\",\n        explanation: \"A constructor in Java is a special method used to initialize objects. It has the same name as the class and is called when an object is created.\"\n      },\n      {\n        question: \"What does the static keyword mean?\",\n        options: [\"Method belongs to instance\", \"Method belongs to class\", \"Method is private\", \"Method is abstract\"],\n        answer: \"Method belongs to class\",\n        explanation: \"The `static` keyword in Java indicates that a method or variable belongs to the class rather than an instance of the class. It can be accessed without creating an object.\"\n      },\n      {\n        question: \"What is used to achieve inheritance in Java?\",\n        options: [\"this\", \"extends\", \"inherits\", \"super\"],\n        answer: \"extends\",\n        explanation: \"The `extends` keyword is used to achieve inheritance in Java. It allows a subclass to inherit properties and methods from a superclass.\"\n      },\n      {\n        question: \"Which loop runs at least once?\",\n        options: [\"for\", \"while\", \"do-while\", \"foreach\"],\n        answer: \"do-while\",\n        explanation: \"The `do-while` loop in Java runs at least once because the condition is checked after the loop body is executed.\"\n      },\n      {\n        question: \"What is the size of an int in Java?\",\n        options: [\"2 bytes\", \"4 bytes\", \"8 bytes\", \"16 bytes\"],\n        answer: \"4 bytes\",\n        explanation: \"In Java, an `int` is a 32-bit signed integer, which means it occupies 4 bytes of memory.\"\n      },\n      {\n        question: \"Which keyword is used to prevent method overriding?\",\n        options: [\"static\", \"super\", \"final\", \"this\"],\n        answer: \"final\",\n        explanation: \"The `final` keyword is used to prevent method overriding in Java. A method declared as `final` cannot be overridden by subclasses.\"\n      },\n      {\n        question: \"Which of the following is not a Java primitive type?\",\n        options: [\"int\", \"float\", \"char\", \"String\"],\n        answer: \"String\",\n        explanation: \"`String` is not a primitive type in Java. It is a class in the `java.lang` package. Primitive types include `int`, `float`, `char`, etc.\"\n      },\n      {\n        question: \"Which interface provides the ability to store key-value pairs?\",\n        options: [\"Map\", \"List\", \"Queue\", \"Set\"],\n        answer: \"Map\",\n        explanation: \"The `Map` interface in Java is used to store key-value pairs. Common implementations include `HashMap`, `TreeMap`, and `LinkedHashMap`.\"\n      },\n      {\n        question: \"What does JVM stand for?\",\n        options: [\"Java Virtual Machine\", \"Java Vendor Machine\", \"Java Version Model\", \"Java Variable Management\"],\n        answer: \"Java Virtual Machine\",\n        explanation: \"JVM stands for Java Virtual Machine. It is the runtime environment that executes Java bytecode and provides platform independence.\"\n      },\n    ],\n    2: [\n      {\n        question: \"What is the main concept behind OOP?\",\n        options: [\"Structured Programming\", \"Encapsulation, Inheritance, Polymorphism, and Abstraction\", \"Functional Programming\", \"Memory Optimization\"],\n        answer: \"Encapsulation, Inheritance, Polymorphism, and Abstraction\",\n        explanation: \"Object-Oriented Programming (OOP) is based on four main concepts: Encapsulation, Inheritance, Polymorphism, and Abstraction.\"\n      },\n      {\n        question: \"What keyword is used to create an object?\",\n        options: [\"create\", \"new\", \"instance\", \"allocate\"],\n        answer: \"new\",\n        explanation: \"The `new` keyword is used to create an object in Java. It allocates memory for the object and calls the constructor to initialize it.\"\n      },\n      {\n        question: \"What is Encapsulation?\",\n        options: [\"Hiding implementation details\", \"Sorting data\", \"Alternative to loops\", \"Executing functions\"],\n        answer: \"Hiding implementation details\",\n        explanation: \"Encapsulation is the concept of hiding the internal details of an object and exposing only the necessary functionality through methods.\"\n      },\n      {\n        question: \"Which of the following is an access modifier?\",\n        options: [\"public\", \"static\", \"abstract\", \"main\"],\n        answer: \"public\",\n        explanation: \"`public` is an access modifier in Java. It allows a class, method, or variable to be accessed from any other class.\"\n      },\n      {\n        question: \"How do you inherit a class in Java?\",\n        options: [\"extends\", \"implements\", \"inherits\", \"super\"],\n        answer: \"extends\",\n        explanation: \"The `extends` keyword is used to inherit a class in Java. It allows a subclass to inherit properties and methods from a superclass.\"\n      },\n      {\n        question: \"What is method overloading?\",\n        options: [\"Creating multiple methods with the same name but different parameters\", \"Reusing methods from parent classes\", \"A function that modifies its behavior\", \"Overriding private methods\"],\n        answer: \"Creating multiple methods with the same name but different parameters\",\n        explanation: \"Method overloading in Java allows multiple methods to have the same name but different parameters. It is a form of compile-time polymorphism.\"\n      },\n      {\n        question: \"Which of these is NOT a pillar of OOP?\",\n        options: [\"Encapsulation\", \"Polymorphism\", \"Compilation\", \"Inheritance\"],\n        answer: \"Compilation\",\n        explanation: \"Compilation is not a pillar of OOP. The four pillars of OOP are Encapsulation, Inheritance, Polymorphism, and Abstraction.\"\n      },\n      {\n        question: \"How do you define a constructor in Java?\",\n        options: [\"static void Constructor() {}\", \"public static Constructor() {}\", \"public ClassName() {}\", \"void new() {}\"],\n        answer: \"public ClassName() {}\",\n        explanation: \"A constructor in Java is defined using the class name and does not have a return type. For example: `public ClassName() {}`.\"\n      },\n      {\n        question: \"What is a superclass in Java?\",\n        options: [\"A method\", \"A class that inherits\", \"A class that is extended by another class\", \"A class that cannot be instantiated\"],\n        answer: \"A class that is extended by another class\",\n        explanation: \"A superclass in Java is a class that is extended by another class (subclass). It provides properties and methods that the subclass can inherit.\"\n      },\n      {\n        question: \"Which method enables runtime polymorphism?\",\n        options: [\"method overloading\", \"method overriding\", \"method hiding\", \"constructor chaining\"],\n        answer: \"method overriding\",\n        explanation: \"Method overriding enables runtime polymorphism in Java. It allows a subclass to provide a specific implementation of a method that is already defined in its superclass.\"\n      },\n      {\n        question: \"What does the super keyword do?\",\n        options: [\"Calls the child class constructor\", \"Calls the parent class constructor/method\", \"Creates a new object\", \"Deletes an object\"],\n        answer: \"Calls the parent class constructor/method\",\n        explanation: \"The `super` keyword in Java is used to call the constructor or method of the parent class from the subclass.\"\n      },\n      {\n        question: \"Which of the following cannot be overridden?\",\n        options: [\"Static methods\", \"Public methods\", \"Private methods\", \"Protected methods\"],\n        answer: \"Static methods\",\n        explanation: \"Static methods in Java cannot be overridden because they belong to the class rather than an instance of the class.\"\n      },\n      {\n        question: \"What does final keyword do?\",\n        options: [\"Prevents method overriding\", \"Makes a variable mutable\", \"Allows changes at runtime\", \"Declares a new instance\"],\n        answer: \"Prevents method overriding\",\n        explanation: \"The `final` keyword in Java prevents method overriding, variable reassignment, and class inheritance.\"\n      },\n      {\n        question: \"What is the purpose of interfaces in Java?\",\n        options: [\"To create abstract classes\", \"To enable multiple inheritance\", \"To define class behavior\", \"To make classes static\"],\n        answer: \"To enable multiple inheritance\",\n        explanation: \"Interfaces in Java allow a class to implement multiple interfaces, enabling a form of multiple inheritance.\"\n      },\n      {\n        question: \"What is the default access modifier for a class?\",\n        options: [\"Package-private\", \"Private\", \"Public\", \"Protected\"],\n        answer: \"Package-private\",\n        explanation: \"The default access modifier for a class in Java is package-private. It means the class is accessible only within its package.\"\n      },\n    ],\n    3: [\n      {\n        question: \"Which keyword is used to handle exceptions in Java?\",\n        options: [\"catch\", \"throw\", \"try\", \"finally\"],\n        answer: \"try\",\n        explanation: \"The `try` keyword is used to define a block of code that might throw an exception. It is followed by `catch` and/or `finally` blocks to handle the exception.\"\n      },\n      {\n        question: \"What is the purpose of the finally block in exception handling?\",\n        options: [\"To execute only if an exception occurs\", \"To execute only if no exception occurs\", \"To always execute regardless of exception\", \"To throw an exception\"],\n        answer: \"To always execute regardless of exception\",\n        explanation: \"The `finally` block is used to execute code that must run whether an exception occurs or not. It is often used for cleanup tasks like closing resources.\"\n      },\n      {\n        question: \"Which of the following is NOT a type of exception in Java?\",\n        options: [\"Checked Exception\", \"Unchecked Exception\", \"Runtime Exception\", \"Syntax Exception\"],\n        answer: \"Syntax Exception\",\n        explanation: \"Syntax errors are detected at compile time and are not considered exceptions in Java. Exceptions are runtime errors that occur during program execution.\"\n      },\n      {\n        question: \"What does the throws keyword do?\",\n        options: [\"Catches exceptions\", \"Declares exceptions that a method might throw\", \"Ignores exceptions\", \"Creates exceptions\"],\n        answer: \"Declares exceptions that a method might throw\",\n        explanation: \"The `throws` keyword is used in a method signature to declare that the method might throw one or more exceptions. It is used to propagate exceptions to the caller.\"\n      },\n      {\n        question: \"Which class is the parent of all exception classes in Java?\",\n        options: [\"Throwable\", \"Exception\", \"Error\", \"RuntimeException\"],\n        answer: \"Throwable\",\n        explanation: \"The `Throwable` class is the superclass of all errors and exceptions in Java. It has two main subclasses: `Error` and `Exception`.\"\n      },\n      {\n        question: \"Which Java statement is used to create a new file?\",\n        options: [\"File.create()\", \"new File()\", \"Files.createNewFile()\", \"File.write()\"],\n        answer: \"Files.createNewFile()\",\n        explanation: \"The `Files.createNewFile()` method is used to create a new file in Java. It returns `true` if the file was successfully created.\"\n      },\n      {\n        question: \"Which method is used to write text to a file in Java?\",\n        options: [\"writeText()\", \"FileWriter.write()\", \"write()\", \"print()\"],\n        answer: \"FileWriter.write()\",\n        explanation: \"The `FileWriter.write()` method is used to write text to a file. It writes characters to the file as specified by the `String` or `char` array.\"\n      },\n      {\n        question: \"Which stream is used for reading character data from a file?\",\n        options: [\"FileInputStream\", \"BufferedReader\", \"DataInputStream\", \"Scanner\"],\n        answer: \"BufferedReader\",\n        explanation: \"The `BufferedReader` class is used to read text from a character-input stream. It provides efficient reading of characters, arrays, and lines.\"\n      },\n      {\n        question: \"Which method reads a single character from a file in Java?\",\n        options: [\"read()\", \"nextChar()\", \"getChar()\", \"charAt()\"],\n        answer: \"read()\",\n        explanation: \"The `read()` method in `BufferedReader` reads a single character from the input stream and returns it as an integer.\"\n      },\n      {\n        question: \"Which keyword is used to manually throw an exception?\",\n        options: [\"throw\", \"throws\", \"catch\", \"exception\"],\n        answer: \"throw\",\n        explanation: \"The `throw` keyword is used to manually throw an exception in Java. It is typically used to throw custom exceptions or rethrow caught exceptions.\"\n      },\n      {\n        question: \"What is the default behavior of an uncaught exception?\",\n        options: [\"The program crashes\", \"The exception is ignored\", \"It gets logged\", \"It is automatically handled\"],\n        answer: \"The program crashes\",\n        explanation: \"If an exception is not caught, it propagates up the call stack and causes the program to terminate, resulting in a crash.\"\n      },\n      {\n        question: \"Which exception occurs when an invalid array index is accessed?\",\n        options: [\"ArrayIndexOutOfBoundsException\", \"NullPointerException\", \"IllegalArgumentException\", \"ArithmeticException\"],\n        answer: \"ArrayIndexOutOfBoundsException\",\n        explanation: \"The `ArrayIndexOutOfBoundsException` is thrown when an invalid index is used to access an array. The index is either negative or greater than or equal to the array size.\"\n      },\n      {\n        question: \"What happens if the file specified in FileReader does not exist?\",\n        options: [\"It creates a new file\", \"It throws a FileNotFoundException\", \"It ignores the error\", \"It returns null\"],\n        answer: \"It throws a FileNotFoundException\",\n        explanation: \"If the file specified in `FileReader` does not exist, a `FileNotFoundException` is thrown. This is a checked exception and must be handled.\"\n      },\n      {\n        question: \"Which exception occurs when dividing a number by zero?\",\n        options: [\"ArithmeticException\", \"NumberFormatException\", \"IOException\", \"NullPointerException\"],\n        answer: \"ArithmeticException\",\n        explanation: \"The `ArithmeticException` is thrown when an arithmetic operation fails, such as dividing an integer by zero.\"\n      },\n    ],\n    4: [\n      {\n        question: \"Which Java class is used for creating a thread?\",\n        options: [\"Thread\", \"Runnable\", \"Process\", \"Task\"],\n        answer: \"Thread\",\n        explanation: \"The `Thread` class in Java is used to create and manage threads. It provides methods like `start()`, `run()`, and `join()` for thread management.\"\n      },\n      {\n        question: \"Which method is used to start a new thread?\",\n        options: [\"run()\", \"begin()\", \"execute()\", \"start()\"],\n        answer: \"start()\",\n        explanation: \"The `start()` method is used to start a new thread. It calls the `run()` method of the `Thread` class in a separate thread of execution.\"\n      },\n      {\n        question: \"What does the synchronized keyword do?\",\n        options: [\"Prevents deadlocks\", \"Ensures thread safety by locking a resource\", \"Stops a thread\", \"Runs a thread in the background\"],\n        answer: \"Ensures thread safety by locking a resource\",\n        explanation: \"The `synchronized` keyword is used to ensure thread safety by allowing only one thread to access a resource or block of code at a time.\"\n      },\n      {\n        question: \"Which method is called when a thread is stopped?\",\n        options: [\"stop()\", \"halt()\", \"terminate()\", \"None (Java does not support stopping a thread directly)\"],\n        answer: \"None (Java does not support stopping a thread directly)\",\n        explanation: \"Java does not provide a direct way to stop a thread. The `stop()` method is deprecated because it can leave the application in an inconsistent state.\"\n      },\n      {\n        question: \"Which of these is a valid thread state in Java?\",\n        options: [\"Executing\", \"Running\", \"Idle\", \"Waiting\"],\n        answer: \"Waiting\",\n        explanation: \"The `Waiting` state is a valid thread state in Java. A thread enters this state when it waits for another thread to perform a task.\"\n      },\n      {\n        question: \"Which Java interface must be implemented for multithreading?\",\n        options: [\"Threadable\", \"Runnable\", \"Executable\", \"Multithread\"],\n        answer: \"Runnable\",\n        explanation: \"The `Runnable` interface must be implemented to create a thread in Java. It defines a single method, `run()`, which contains the code executed by the thread.\"\n      },\n      {\n        question: \"Which method in Java is used to pause a thread?\",\n        options: [\"pause()\", \"sleep()\", \"wait()\", \"halt()\"],\n        answer: \"sleep()\",\n        explanation: \"The `sleep()` method is used to pause the execution of a thread for a specified amount of time. It does not release any locks.\"\n      },\n      {\n        question: \"Which method causes the current thread to wait until another thread finishes execution?\",\n        options: [\"wait()\", \"sleep()\", \"join()\", \"yield()\"],\n        answer: \"join()\",\n        explanation: \"The `join()` method causes the current thread to wait until the thread it is called on finishes execution.\"\n      },\n      {\n        question: \"Which class provides socket programming in Java?\",\n        options: [\"java.net.Socket\", \"java.io.Socket\", \"java.net.Connect\", \"java.net.Network\"],\n        answer: \"java.net.Socket\",\n        explanation: \"The `java.net.Socket` class is used for socket programming in Java. It provides a way to establish a connection between two machines over a network.\"\n      },\n      {\n        question: \"Which protocol is commonly used for client-server communication?\",\n        options: [\"HTTP\", \"FTP\", \"SMTP\", \"DNS\"],\n        answer: \"HTTP\",\n        explanation: \"HTTP (Hypertext Transfer Protocol) is commonly used for client-server communication, especially in web applications.\"\n      },\n      {\n        question: \"Which class is used to send data over a socket?\",\n        options: [\"SocketSender\", \"OutputStream\", \"DataTransfer\", \"SocketData\"],\n        answer: \"OutputStream\",\n        explanation: \"The `OutputStream` class is used to send data over a socket. It provides methods like `write()` to send bytes of data.\"\n      },\n      {\n        question: \"Which function waits for a client connection in socket programming?\",\n        options: [\"listen()\", \"wait()\", \"accept()\", \"connect()\"],\n        answer: \"accept()\",\n        explanation: \"The `accept()` method in the `ServerSocket` class waits for a client connection and returns a `Socket` object representing the connection.\"\n      },\n      {\n        question: \"Which function is used to close a socket connection?\",\n        options: [\"end()\", \"shutdown()\", \"close()\", \"disconnect()\"],\n        answer: \"close()\",\n        explanation: \"The `close()` method is used to close a socket connection. It releases the resources associated with the socket.\"\n      },\n      {\n        question: \"Which method allows one thread to pause execution and allow others to run?\",\n        options: [\"yield()\", \"wait()\", \"pause()\", \"stop()\"],\n        answer: \"yield()\",\n        explanation: \"The `yield()` method allows the current thread to pause its execution and give other threads a chance to run.\"\n      },\n      {\n        question: \"Which Java package contains the networking classes?\",\n        options: [\"java.net\", \"java.io\", \"java.lang\", \"java.utils\"],\n        answer: \"java.net\",\n        explanation: \"The `java.net` package contains classes for networking, such as `Socket`, `ServerSocket`, and `URL`.\"\n      },\n    ],\n    5: [\n      {\n        question: \"Which Java GUI framework is built into Java?\",\n        options: [\"Swing\", \"JavaFX\", \"AWT\", \"All of the above\"],\n        answer: \"All of the above\",\n        explanation: \"Java provides multiple GUI frameworks, including Swing, JavaFX, and AWT, which are built into the Java Development Kit (JDK).\"\n      },\n      {\n        question: \"Which package is used for creating GUI applications in Java?\",\n        options: [\"java.awt\", \"javax.swing\", \"javafx\", \"All of the above\"],\n        answer: \"All of the above\",\n        explanation: \"Java provides multiple packages for GUI development, including `java.awt`, `javax.swing`, and `javafx`.\"\n      },\n      {\n        question: \"Which component is used to create a button in Swing?\",\n        options: [\"JButton\", \"Button\", \"SwingButton\", \"AWTButton\"],\n        answer: \"JButton\",\n        explanation: \"In Swing, the `JButton` class is used to create a button component.\"\n      },\n      {\n        question: \"Which method is used to set the visibility of a JFrame?\",\n        options: [\"setVisible()\", \"display()\", \"show()\", \"setFrame()\"],\n        answer: \"setVisible()\",\n        explanation: \"The `setVisible(true)` method is used to make a `JFrame` visible on the screen.\"\n      },\n      {\n        question: \"Which Swing container is the top-level container for GUI applications?\",\n        options: [\"JFrame\", \"JPanel\", \"JDialog\", \"JWindow\"],\n        answer: \"JFrame\",\n        explanation: \"`JFrame` is the top-level container in Swing, used as the main window for GUI applications.\"\n      },\n      {\n        question: \"Which layout manager arranges components in a single row or column?\",\n        options: [\"GridLayout\", \"BorderLayout\", \"FlowLayout\", \"CardLayout\"],\n        answer: \"FlowLayout\",\n        explanation: \"`FlowLayout` arranges components in a single row or column, depending on the available space.\"\n      },\n      {\n        question: \"Which method is used to add an event listener to a button?\",\n        options: [\"addActionListener()\", \"setEventListener()\", \"onClick()\", \"addListener()\"],\n        answer: \"addActionListener()\",\n        explanation: \"The `addActionListener()` method is used to attach an event listener to a button in Swing.\"\n      },\n      {\n        question: \"Which of these is NOT a layout manager in Java?\",\n        options: [\"BorderLayout\", \"GridLayout\", \"AbsoluteLayout\", \"SpringLayout\"],\n        answer: \"AbsoluteLayout\",\n        explanation: \"`AbsoluteLayout` is not a standard layout manager in Java. Instead, `null` layout is used for absolute positioning.\"\n      },\n      {\n        question: \"Which event class is used to handle button clicks?\",\n        options: [\"KeyEvent\", \"MouseEvent\", \"ActionEvent\", \"InputEvent\"],\n        answer: \"ActionEvent\",\n        explanation: \"The `ActionEvent` class is used to handle button click events in Java.\"\n      },\n      {\n        question: \"Which JavaFX class is the entry point for JavaFX applications?\",\n        options: [\"Application\", \"Scene\", \"Stage\", \"FXMain\"],\n        answer: \"Application\",\n        explanation: \"The `Application` class is the entry point for JavaFX applications. It provides the `start()` method to initialize the application.\"\n      },\n      {\n        question: \"Which method is used to set the title of a JFrame?\",\n        options: [\"setTitle()\", \"setFrameTitle()\", \"setWindowTitle()\", \"defineTitle()\"],\n        answer: \"setTitle()\",\n        explanation: \"The `setTitle()` method is used to set the title of a `JFrame`.\"\n      },\n      {\n        question: \"Which component is used to create a text field in Swing?\",\n        options: [\"JLabel\", \"JTextField\", \"JTextArea\", \"JInput\"],\n        answer: \"JTextField\",\n        explanation: \"The `JTextField` component is used to create a single-line text input field in Swing.\"\n      },\n      {\n        question: \"Which method is used to close a JavaFX application?\",\n        options: [\"exit()\", \"closeApp()\", \"stop()\", \"terminate()\"],\n        answer: \"stop()\",\n        explanation: \"The `stop()` method in the `Application` class is called when the JavaFX application is closed.\"\n      },\n      {\n        question: \"Which component is used to display a dialog box in Swing?\",\n        options: [\"JDialog\", \"JPopup\", \"JBox\", \"JFrame\"],\n        answer: \"JDialog\",\n        explanation: \"The `JDialog` component is used to create dialog boxes in Swing.\"\n      },\n      {\n        question: \"Which class is used for 2D graphics in Java?\",\n        options: [\"Graphics\", \"Graphics2D\", \"Drawing\", \"Canvas\"],\n        answer: \"Graphics2D\",\n        explanation: \"The `Graphics2D` class is used for rendering 2D shapes, text, and images in Java.\"\n      },\n    ],\n  \n    6: [\n      {\n        question: \"Which Java framework is commonly used for web development?\",\n        options: [\"Spring Boot\", \"Hibernate\", \"Struts\", \"All of the above\"],\n        answer: \"All of the above\",\n        explanation: \"Spring Boot, Hibernate, and Struts are all commonly used frameworks for Java web development.\"\n      },\n      {\n        question: \"What does Spring Boot simplify in Java web development?\",\n        options: [\"Dependency management\", \"Database connections\", \"RESTful API development\", \"All of the above\"],\n        answer: \"All of the above\",\n        explanation: \"Spring Boot simplifies dependency management, database connections, and RESTful API development through its auto-configuration and starter dependencies.\"\n      },\n      {\n        question: \"Which annotation marks a class as a Spring Boot application?\",\n        options: [\"@SpringApplication\", \"@SpringBootApplication\", \"@SpringConfig\", \"@EnableSpring\"],\n        answer: \"@SpringBootApplication\",\n        explanation: \"The `@SpringBootApplication` annotation is used to mark a class as the main entry point for a Spring Boot application.\"\n      },\n      {\n        question: \"Which Spring Boot module is used for RESTful APIs?\",\n        options: [\"Spring MVC\", \"Spring Data\", \"Spring Security\", \"Spring Core\"],\n        answer: \"Spring MVC\",\n        explanation: \"Spring MVC (Model-View-Controller) is used to build RESTful APIs in Spring Boot.\"\n      },\n      {\n        question: \"Which annotation is used to define a REST controller in Spring Boot?\",\n        options: [\"@Controller\", \"@RestController\", \"@SpringController\", \"@WebController\"],\n        answer: \"@RestController\",\n        explanation: \"The `@RestController` annotation is used to define a REST controller in Spring Boot.\"\n      },\n      {\n        question: \"Which HTTP method is used for retrieving data in REST APIs?\",\n        options: [\"POST\", \"DELETE\", \"GET\", \"PUT\"],\n        answer: \"GET\",\n        explanation: \"The `GET` HTTP method is used to retrieve data in REST APIs.\"\n      },\n      {\n        question: \"Which ORM framework is commonly used with Spring Boot?\",\n        options: [\"JPA\", \"Hibernate\", \"JDBC\", \"Both JPA and Hibernate\"],\n        answer: \"Both JPA and Hibernate\",\n        explanation: \"Spring Boot commonly uses JPA (Java Persistence API) and Hibernate for Object-Relational Mapping (ORM).\"\n      },\n      {\n        question: \"Which database is commonly used with Spring Boot?\",\n        options: [\"MySQL\", \"PostgreSQL\", \"MongoDB\", \"All of the above\"],\n        answer: \"All of the above\",\n        explanation: \"Spring Boot supports a wide range of databases, including MySQL, PostgreSQL, and MongoDB.\"\n      },\n      {\n        question: \"Which annotation maps a method to a specific HTTP request in Spring Boot?\",\n        options: [\"@RequestMapping\", \"@GetMapping\", \"@PostMapping\", \"All of the above\"],\n        answer: \"All of the above\",\n        explanation: \"Spring Boot provides annotations like `@RequestMapping`, `@GetMapping`, and `@PostMapping` to map methods to specific HTTP requests.\"\n      },\n      {\n        question: \"Which Spring Boot feature helps in automatic configuration?\",\n        options: [\"Spring Boot AutoConfig\", \"Spring Initializer\", \"Spring Boot Autoconfiguration\", \"Spring Boot Starter\"],\n        answer: \"Spring Boot Autoconfiguration\",\n        explanation: \"Spring Boot Autoconfiguration automatically configures the application based on the dependencies present in the classpath.\"\n      },\n      {\n        question: \"Which component of Spring Boot handles security?\",\n        options: [\"Spring Security\", \"Spring Guard\", \"Spring Auth\", \"Spring Access\"],\n        answer: \"Spring Security\",\n        explanation: \"Spring Security is the component of Spring Boot that handles authentication and authorization.\"\n      },\n      {\n        question: \"Which dependency is required for Spring Boot web applications?\",\n        options: [\"spring-boot-starter-web\", \"spring-core\", \"spring-boot-mvc\", \"spring-server\"],\n        answer: \"spring-boot-starter-web\",\n        explanation: \"The `spring-boot-starter-web` dependency is required for building web applications in Spring Boot.\"\n      },\n      {\n        question: \"Which file is used to configure a Spring Boot application?\",\n        options: [\"application.properties\", \"config.yaml\", \"settings.xml\", \"spring.xml\"],\n        answer: \"application.properties\",\n        explanation: \"The `application.properties` file is used to configure a Spring Boot application.\"\n      },\n      {\n        question: \"Which tool is used to create a Spring Boot project?\",\n        options: [\"Spring Initializr\", \"Spring Boot CLI\", \"Maven\", \"All of the above\"],\n        answer: \"All of the above\",\n        explanation: \"Spring Boot projects can be created using Spring Initializr, Spring Boot CLI, or Maven.\"\n      },\n      {\n        question: \"Which annotation is used for dependency injection in Spring Boot?\",\n        options: [\"@Autowired\", \"@Inject\", \"@Resource\", \"All of the above\"],\n        answer: \"All of the above\",\n        explanation: \"Spring Boot supports dependency injection using annotations like `@Autowired`, `@Inject`, and `@Resource`.\"\n      },\n    ],\n    // Add explanations for other modules and courses similarly...\n  },\n};\nconst shuffleArray = (array) => [...array].sort(() => Math.random() - 0.5);\n\n// Utility function to get 10 random questions\nconst getRandomQuestions = (questions) => {\n  return shuffleArray(questions)\n    .slice(0, 10)\n    .map((q) => ({\n      ...q,\n      options: shuffleArray(q.options),\n    }));\n};\n\nconst Quiz = () => {\n  const { courseName, moduleId } = useParams();\n  const navigate = useNavigate();\n  const [questions, setQuestions] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [score, setScore] = useState(0);\n  const [quizCompleted, setQuizCompleted] = useState(false);\n  const [incorrectAnswers, setIncorrectAnswers] = useState([]);\n\n  // Fetch questions for the current module\n  useEffect(() => {\n    if (!quizData[courseName] || !quizData[courseName][moduleId]) {\n      console.error(\"No quiz available for this module.\");\n      navigate(`/course/${courseName}/1`); // Redirect to the first module if invalid\n      return;\n    }\n    setQuestions(getRandomQuestions(quizData[courseName][moduleId]));\n  }, [courseName, moduleId, navigate]);\n\n  // Handle answer selection\n  const handleAnswer = (option) => {\n    if (selectedAnswer !== null) return; // Prevent multiple selections\n    setSelectedAnswer(option);\n\n    const currentQuestion = questions[currentIndex];\n    if (option === currentQuestion.answer) {\n      setScore((prev) => prev + 1);\n    } else {\n      setIncorrectAnswers((prev) => [\n        ...prev,\n        {\n          question: currentQuestion.question,\n          correctAnswer: currentQuestion.answer,\n          explanation: currentQuestion.explanation || \"No explanation provided.\",\n        },\n      ]);\n    }\n  };\n\n  // Move to the next question or finish the quiz\n  const handleNext = () => {\n    if (currentIndex + 1 < questions.length) {\n      setCurrentIndex((prev) => prev + 1);\n      setSelectedAnswer(null);\n    } else {\n      setQuizCompleted(true);\n    }\n  };\n\n  // Retry the quiz\n  const handleRetryQuiz = () => {\n    setCurrentIndex(0);\n    setSelectedAnswer(null);\n    setScore(0);\n    setQuizCompleted(false);\n    setIncorrectAnswers([]);\n    setQuestions(getRandomQuestions(quizData[courseName][moduleId]));\n  };\n\n  // Proceed to the next module\n  const handleQuizCompletion = () => {\n    const nextModule = Math.min(6, parseInt(moduleId) + 1);\n    navigate(`/course/${courseName}/${nextModule}`);\n  };\n\n  return (\n    <div className=\"quiz-container\">\n      {!quizCompleted ? (\n        <>\n          <h2>Quiz for {courseName} - Module {moduleId}</h2>\n          <p>\n            Question {currentIndex + 1} of {questions.length}\n          </p>\n          {questions.length > 0 && (\n            <>\n              <p>\n                <strong>{questions[currentIndex].question}</strong>\n              </p>\n              <ul className=\"options-list\">\n                {questions[currentIndex].options.map((option, idx) => (\n                  <li\n                    key={idx}\n                    className={`option-item ${\n                      selectedAnswer\n                        ? option === selectedAnswer\n                          ? \"selected\"\n                          : option === questions[currentIndex].answer\n                          ? \"correct\"\n                          : \"\"\n                        : \"\"\n                    }`}\n                    onClick={() => handleAnswer(option)}\n                  >\n                    {option}\n                  </li>\n                ))}\n              </ul>\n            </>\n          )}\n          <button\n            className=\"next-btn\"\n            onClick={handleNext}\n            disabled={selectedAnswer === null}\n          >\n            {currentIndex + 1 < questions.length ? \"Next Question\" : \"Finish Quiz\"}\n          </button>\n        </>\n      ) : (\n        <QuizConclusion\n          score={score}\n          totalQuestions={questions.length}\n          incorrectAnswers={incorrectAnswers}\n          onRetry={handleRetryQuiz}\n          onNext={handleQuizCompletion}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Quiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}