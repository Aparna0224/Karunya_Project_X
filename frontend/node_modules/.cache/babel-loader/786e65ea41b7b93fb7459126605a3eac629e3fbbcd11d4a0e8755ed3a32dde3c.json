{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\OneDrive\\\\Desktop\\\\newllm\\\\Topperdavid\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const moduleContent = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.content) || \"\";\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n\n  // Function to generate questions from module content\n  const generateQuestions = () => {\n    // Example: Extract key concepts and generate questions\n    const lines = moduleContent.split(\"\\n\").filter(line => line.trim() !== \"\");\n    const generatedQuestions = lines.slice(0, 10).map((line, index) => ({\n      id: index + 1,\n      text: `What is the main idea of: \"${line}\"?`,\n      options: [\"Option 1\", \"Option 2\", \"Option 3\", \"Option 4\"],\n      correct: \"Option 1\" // Replace with logic to determine the correct answer\n    }));\n    setQuestions(generatedQuestions);\n  };\n\n  // Load questions when the component mounts\n  useState(() => {\n    generateQuestions();\n  }, [moduleContent]);\n  const handleNextQuestion = () => {\n    if (selectedOption === questions[currentQuestionIndex].correct) {\n      setScore(score + 1);\n    }\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setSelectedOption(\"\");\n    } else {\n      setShowResult(true);\n    }\n  };\n  const handleRestart = () => {\n    setCurrentQuestionIndex(0);\n    setSelectedOption(\"\");\n    setScore(0);\n    setShowResult(false);\n  };\n  if (questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading quiz...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n  if (showResult) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quiz Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your score: \", score, \" / \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRestart,\n        children: \"Restart Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/\"),\n        children: \"Go Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n  const currentQuestion = questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Question \", currentQuestionIndex + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: currentQuestion.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"option\",\n            value: option,\n            checked: selectedOption === option,\n            onChange: () => setSelectedOption(option)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), option]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNextQuestion,\n      children: currentQuestionIndex === questions.length - 1 ? \"Finish\" : \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"+tUGyZutSmn/zy0Mol6PJLKVjU0=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["useLocation","useNavigate","useState","jsxDEV","_jsxDEV","Quiz","_s","_location$state","location","navigate","moduleContent","state","content","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedOption","setSelectedOption","score","setScore","showResult","setShowResult","generateQuestions","lines","split","filter","line","trim","generatedQuestions","slice","map","index","id","text","options","correct","handleNextQuestion","length","handleRestart","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","currentQuestion","option","type","name","value","checked","onChange","_c","$RefreshReg$"],"sources":["C:/Users/david/OneDrive/Desktop/newllm/Topperdavid/src/components/Quiz.js"],"sourcesContent":["import { useLocation, useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nconst Quiz = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const moduleContent = location.state?.content || \"\";\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n\n  // Function to generate questions from module content\n  const generateQuestions = () => {\n    // Example: Extract key concepts and generate questions\n    const lines = moduleContent.split(\"\\n\").filter((line) => line.trim() !== \"\");\n    const generatedQuestions = lines.slice(0, 10).map((line, index) => ({\n      id: index + 1,\n      text: `What is the main idea of: \"${line}\"?`,\n      options: [\"Option 1\", \"Option 2\", \"Option 3\", \"Option 4\"],\n      correct: \"Option 1\", // Replace with logic to determine the correct answer\n    }));\n    setQuestions(generatedQuestions);\n  };\n\n  // Load questions when the component mounts\n  useState(() => {\n    generateQuestions();\n  }, [moduleContent]);\n\n  const handleNextQuestion = () => {\n    if (selectedOption === questions[currentQuestionIndex].correct) {\n      setScore(score + 1);\n    }\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setSelectedOption(\"\");\n    } else {\n      setShowResult(true);\n    }\n  };\n\n  const handleRestart = () => {\n    setCurrentQuestionIndex(0);\n    setSelectedOption(\"\");\n    setScore(0);\n    setShowResult(false);\n  };\n\n  if (questions.length === 0) {\n    return <p>Loading quiz...</p>;\n  }\n\n  if (showResult) {\n    return (\n      <div className=\"quiz-container\">\n        <h2>Quiz Result</h2>\n        <p>Your score: {score} / {questions.length}</p>\n        <button onClick={handleRestart}>Restart Quiz</button>\n        <button onClick={() => navigate(\"/\")}>Go Home</button>\n      </div>\n    );\n  }\n\n  const currentQuestion = questions[currentQuestionIndex];\n\n  return (\n    <div className=\"quiz-container\">\n      <h2>Question {currentQuestionIndex + 1}</h2>\n      <p>{currentQuestion.text}</p>\n      <ul>\n        {currentQuestion.options.map((option, index) => (\n          <li key={index}>\n            <label>\n              <input\n                type=\"radio\"\n                name=\"option\"\n                value={option}\n                checked={selectedOption === option}\n                onChange={() => setSelectedOption(option)}\n              />\n              {option}\n            </label>\n          </li>\n        ))}\n      </ul>\n      <button onClick={handleNextQuestion}>\n        {currentQuestionIndex === questions.length - 1 ? \"Finish\" : \"Next\"}\n      </button>\n    </div>\n  );\n};\n\nexport default Quiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}