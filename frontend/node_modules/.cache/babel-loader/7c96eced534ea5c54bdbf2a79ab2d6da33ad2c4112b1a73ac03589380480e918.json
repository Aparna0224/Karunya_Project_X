{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\OneDrive\\\\Desktop\\\\newllm\\\\Topperdavid\\\\src\\\\components\\\\Assessment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Assessment = () => {\n  _s();\n  // Get query parameters from the URL\n  const [searchParams, setSearchParams] = useSearchParams();\n  const initialCourse = searchParams.get(\"course\") || \"Java\";\n  const initialLevel = searchParams.get(\"level\") || \"Beginner\";\n\n  // State management\n  const [selectedCourse, setSelectedCourse] = useState(initialCourse);\n  const [selectedLevel, setSelectedLevel] = useState(initialLevel);\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [answers, setAnswers] = useState({});\n\n  // Fetch questions when course or level changes\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.post(\"http://localhost:5001/generate-mcq\", {\n          course: selectedCourse,\n          level: selectedLevel\n        });\n        setQuestions(response.data.questions);\n        setError(null);\n      } catch (err) {\n        setError(\"Failed to load questions. Please try again.\");\n        setQuestions([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchQuestions();\n  }, [selectedCourse, selectedLevel]);\n\n  // Update query parameters & fetch new questions\n  const updateSelection = () => {\n    setSearchParams({\n      course: selectedCourse,\n      level: selectedLevel\n    });\n  };\n\n  // Handle answer selection\n  const handleAnswerChange = (questionIndex, answer) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questionIndex]: answer\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\uD83D\\uDCDA \", selectedCourse, \" - \", selectedLevel, \" Level Assessment\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selection-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Course:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCourse,\n        onChange: e => setSelectedCourse(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Java\",\n          children: \"Java\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Python\",\n          children: \"Python\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Level:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedLevel,\n        onChange: e => setSelectedLevel(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Beginner\",\n          children: \"Beginner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Intermediate\",\n          children: \"Intermediate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Advanced\",\n          children: \"Advanced\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: updateSelection,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 23\n    }, this), !loading && !error && questions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questions-container\",\n      children: questions.map((q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Q\", index + 1, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 32\n          }, this), \" \", q.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: q.options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: `question-${index}`,\n              value: option,\n              checked: answers[index] === option,\n              onChange: () => handleAnswerChange(index, option)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 41\n            }, this), option]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this), !loading && questions.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No questions available for this selection.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 52\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(Assessment, \"W8l1hQL6/fnyCB3RoPb+JNAmTg0=\", false, function () {\n  return [useSearchParams];\n});\n_c = Assessment;\nexport default Assessment;\nvar _c;\n$RefreshReg$(_c, \"Assessment\");","map":{"version":3,"names":["React","useState","useEffect","useSearchParams","axios","jsxDEV","_jsxDEV","Assessment","_s","searchParams","setSearchParams","initialCourse","get","initialLevel","selectedCourse","setSelectedCourse","selectedLevel","setSelectedLevel","questions","setQuestions","loading","setLoading","error","setError","answers","setAnswers","fetchQuestions","response","post","course","level","data","err","updateSelection","handleAnswerChange","questionIndex","answer","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","style","color","length","map","q","index","text","options","option","idx","type","name","checked","_c","$RefreshReg$"],"sources":["C:/Users/david/OneDrive/Desktop/newllm/Topperdavid/src/components/Assessment.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst Assessment = () => {\r\n    // Get query parameters from the URL\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    const initialCourse = searchParams.get(\"course\") || \"Java\";\r\n    const initialLevel = searchParams.get(\"level\") || \"Beginner\";\r\n\r\n    // State management\r\n    const [selectedCourse, setSelectedCourse] = useState(initialCourse);\r\n    const [selectedLevel, setSelectedLevel] = useState(initialLevel);\r\n    const [questions, setQuestions] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [answers, setAnswers] = useState({});\r\n\r\n    // Fetch questions when course or level changes\r\n    useEffect(() => {\r\n        const fetchQuestions = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const response = await axios.post(\"http://localhost:5001/generate-mcq\", {\r\n                    course: selectedCourse,\r\n                    level: selectedLevel\r\n                });\r\n                setQuestions(response.data.questions);\r\n                setError(null);\r\n            } catch (err) {\r\n                setError(\"Failed to load questions. Please try again.\");\r\n                setQuestions([]);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchQuestions();\r\n    }, [selectedCourse, selectedLevel]);\r\n\r\n    // Update query parameters & fetch new questions\r\n    const updateSelection = () => {\r\n        setSearchParams({ course: selectedCourse, level: selectedLevel });\r\n    };\r\n\r\n    // Handle answer selection\r\n    const handleAnswerChange = (questionIndex, answer) => {\r\n        setAnswers(prev => ({ ...prev, [questionIndex]: answer }));\r\n    };\r\n\r\n    return (\r\n        <div className=\"quiz-container\">\r\n            <h2>📚 {selectedCourse} - {selectedLevel} Level Assessment</h2>\r\n\r\n            <div className=\"selection-container\">\r\n                <label>Course:</label>\r\n                <select value={selectedCourse} onChange={(e) => setSelectedCourse(e.target.value)}>\r\n                    <option value=\"Java\">Java</option>\r\n                    <option value=\"Python\">Python</option>\r\n                </select>\r\n\r\n                <label>Level:</label>\r\n                <select value={selectedLevel} onChange={(e) => setSelectedLevel(e.target.value)}>\r\n                    <option value=\"Beginner\">Beginner</option>\r\n                    <option value=\"Intermediate\">Intermediate</option>\r\n                    <option value=\"Advanced\">Advanced</option>\r\n                </select>\r\n\r\n                <button onClick={updateSelection}>Start</button>\r\n            </div>\r\n\r\n            {loading && <p>Loading questions...</p>}\r\n            {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n            {!loading && !error && questions.length > 0 && (\r\n                <div className=\"questions-container\">\r\n                    {questions.map((q, index) => (\r\n                        <div key={index} className=\"question\">\r\n                            <p><strong>Q{index + 1}:</strong> {q.text}</p>\r\n                            <ul>\r\n                                {q.options.map((option, idx) => (\r\n                                    <li key={idx}>\r\n                                        <input\r\n                                            type=\"radio\"\r\n                                            name={`question-${index}`}\r\n                                            value={option}\r\n                                            checked={answers[index] === option}\r\n                                            onChange={() => handleAnswerChange(index, option)}\r\n                                        />\r\n                                        {option}\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n\r\n            {!loading && questions.length === 0 && <p>No questions available for this selection.</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Assessment;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}