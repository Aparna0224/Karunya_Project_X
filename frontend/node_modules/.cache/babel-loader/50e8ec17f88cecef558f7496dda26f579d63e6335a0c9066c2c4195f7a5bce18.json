{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\OneDrive\\\\Desktop\\\\learning tutor\\\\Karunya_Project_X\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const sendMessage = async () => {\n    if (!input) return;\n    const userMessage = {\n      sender: \"user\",\n      text: input\n    };\n    setMessages([...messages, userMessage]);\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/chat\", {\n        message: input\n      });\n      const botMessage = {\n        sender: \"bot\",\n        text: response.data.response\n      };\n      setMessages([...messages, userMessage, botMessage]);\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n    }\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen flex flex-col justify-center items-center bg-gray-900 text-white\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-lg bg-gray-800 rounded-lg shadow-lg p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold text-center\",\n        children: \"AI Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-80 overflow-y-auto p-2 border rounded\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `mb-2 p-2 rounded-lg ${msg.sender === \"user\" ? \"bg-blue-600 text-right\" : \"bg-gray-700\"}`,\n          children: msg.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"flex-1 p-2 rounded-l bg-gray-700 text-white\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => e.key === \"Enter\" && sendMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-blue-500 p-2 rounded-r text-white\",\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"bxrUXnlHDt+zalfpk8IFX5tJV48=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","messages","setMessages","input","setInput","sendMessage","userMessage","sender","text","response","post","message","botMessage","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","value","onChange","e","target","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["C:/Users/david/OneDrive/Desktop/learning tutor/Karunya_Project_X/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst App = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const sendMessage = async () => {\r\n    if (!input) return;\r\n\r\n    const userMessage = { sender: \"user\", text: input };\r\n    setMessages([...messages, userMessage]);\r\n\r\n    try {\r\n      const response = await axios.post(\"http://127.0.0.1:8000/chat\", {\r\n        message: input,\r\n      });\r\n\r\n      const botMessage = { sender: \"bot\", text: response.data.response };\r\n      setMessages([...messages, userMessage, botMessage]);\r\n    } catch (error) {\r\n      console.error(\"Error sending message:\", error);\r\n    }\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-screen flex flex-col justify-center items-center bg-gray-900 text-white\">\r\n      <div className=\"w-full max-w-lg bg-gray-800 rounded-lg shadow-lg p-4\">\r\n        <h2 className=\"text-xl font-bold text-center\">AI Chatbot</h2>\r\n        <div className=\"h-80 overflow-y-auto p-2 border rounded\">\r\n          {messages.map((msg, index) => (\r\n            <div key={index} className={`mb-2 p-2 rounded-lg ${msg.sender === \"user\" ? \"bg-blue-600 text-right\" : \"bg-gray-700\"}`}>\r\n              {msg.text}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"mt-4 flex\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"flex-1 p-2 rounded-l bg-gray-700 text-white\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\r\n          />\r\n          <button className=\"bg-blue-500 p-2 rounded-r text-white\" onClick={sendMessage}>\r\n            Send\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}