{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\OneDrive\\\\Desktop\\\\learning tutor\\\\Karunya_Project_X\\\\frontend\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport \"./quiz.css\";\n\n// Define the quiz data with 15 questions per module\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst quizData = {\n  Python: {\n    1: [{\n      question: \"Who created Python?\",\n      options: [\"Guido van Rossum\", \"James Gosling\", \"Dennis Ritchie\", \"Bjarne Stroustrup\"],\n      answer: \"Guido van Rossum\",\n      explanation: \"Guido van Rossum created Python in the late 1980s. He is often referred to as Python's 'Benevolent Dictator For Life' (BDFL).\"\n    }, {\n      question: \"Which Python version introduced pattern matching?\",\n      options: [\"Python 2.7\", \"Python 3.6\", \"Python 3.9\", \"Python 3.10\"],\n      answer: \"Python 3.10\",\n      explanation: \"Pattern matching was introduced in Python 3.10 as part of PEP 634. It allows for more expressive and readable code when working with complex data structures.\"\n    }, {\n      question: \"What is NOT a key feature of Python?\",\n      options: [\"Readability\", \"Dynamically typed\", \"Strong typing\", \"Complex syntax\"],\n      answer: \"Complex syntax\",\n      explanation: \"Python is known for its simplicity and readability, not complex syntax. Its syntax is designed to be intuitive and easy to understand.\"\n    }, {\n      question: \"What does the `len()` function do?\",\n      options: [\"Counts items in a list\", \"Finds maximum value\", \"Checks if a variable is None\", \"Reverses a string\"],\n      answer: \"Counts items in a list\",\n      explanation: \"The `len()` function returns the number of items in an object, such as a list, tuple, or string.\"\n    }, {\n      question: \"What will `5 ** 2` return?\",\n      options: [\"25\", \"10\", \"5\", \"2.5\"],\n      answer: \"25\",\n      explanation: \"The `**` operator is used for exponentiation in Python. `5 ** 2` means 5 raised to the power of 2, which is 25.\"\n    }, {\n      question: \"Which statement is used for loops in Python?\",\n      options: [\"for\", \"loop\", \"repeat\", \"iterate\"],\n      answer: \"for\",\n      explanation: \"The `for` statement is used to iterate over a sequence (like a list, tuple, or string) in Python.\"\n    }, {\n      question: \"Which of these is not a Python data type?\",\n      options: [\"List\", \"Tuple\", \"Class\", \"Enum\"],\n      answer: \"Enum\",\n      explanation: \"While Python supports lists, tuples, and classes, `Enum` is not a built-in data type. It is available in the `enum` module.\"\n    }, {\n      question: \"What does the `continue` statement do?\",\n      options: [\"Exits the loop\", \"Skips the current iteration\", \"Repeats the loop\", \"Breaks the loop\"],\n      answer: \"Skips the current iteration\",\n      explanation: \"The `continue` statement skips the rest of the code inside the loop for the current iteration and moves to the next iteration.\"\n    }, {\n      question: \"What does `self` refer to in Python classes?\",\n      options: [\"The current class\", \"The previous object\", \"The current instance\", \"The superclass\"],\n      answer: \"The current instance\",\n      explanation: \"In Python, `self` refers to the current instance of the class. It is used to access variables and methods associated with the instance.\"\n    }, {\n      question: \"How do you declare a function in Python?\",\n      options: [\"def func():\", \"function func() {}\", \"funct func() {}\", \"void func()\"],\n      answer: \"def func():\",\n      explanation: \"In Python, functions are declared using the `def` keyword, followed by the function name and parentheses.\"\n    }, {\n      question: \"Which module is used for regular expressions in Python?\",\n      options: [\"regex\", \"re\", \"regularex\", \"pattern\"],\n      answer: \"re\",\n      explanation: \"The `re` module provides support for regular expressions in Python, allowing pattern matching and text manipulation.\"\n    }, {\n      question: \"Which keyword is used to create a function?\",\n      options: [\"function\", \"def\", \"lambda\", \"create\"],\n      answer: \"def\",\n      explanation: \"The `def` keyword is used to define a function in Python.\"\n    }, {\n      question: \"What does the `is` keyword check?\",\n      options: [\"Value equality\", \"Reference equality\", \"Identity equality\", \"Type checking\"],\n      answer: \"Identity equality\",\n      explanation: \"The `is` keyword checks if two variables point to the same object in memory (identity equality), not if their values are equal.\"\n    }, {\n      question: \"Which data structure allows duplicate values?\",\n      options: [\"Set\", \"Tuple\", \"List\", \"Dictionary\"],\n      answer: \"List\",\n      explanation: \"Lists in Python allow duplicate values, whereas sets and dictionaries do not.\"\n    }, {\n      question: \"How do you start a comment in Python?\",\n      options: [\"//\", \"/* */\", \"#\", \"--\"],\n      answer: \"#\",\n      explanation: \"In Python, comments start with the `#` symbol. Multi-line comments are not natively supported but can be simulated using triple quotes.\"\n    }],\n    2: [{\n      question: \"Which of these is used to store key-value pairs in Python?\",\n      options: [\"List\", \"Tuple\", \"Dictionary\", \"Set\"],\n      answer: \"Dictionary\",\n      explanation: \"Dictionaries in Python store data as key-value pairs, making them ideal for mapping relationships.\"\n    }, {\n      question: \"Which method removes whitespace from a string?\",\n      options: [\"strip()\", \"trim()\", \"remove()\", \"clean()\"],\n      answer: \"strip()\",\n      explanation: \"The `strip()` method removes leading and trailing whitespace from a string.\"\n    }, {\n      question: \"How do you open a file in read mode?\",\n      options: [\"open('file.txt', 'r')\", \"open('file.txt')\", \"open('file.txt', 'w')\", \"file('file.txt')\"],\n      answer: \"open('file.txt', 'r')\",\n      explanation: \"The `open()` function with the mode `'r'` opens a file in read mode.\"\n    }, {\n      question: \"Which data structure ensures unique values?\",\n      options: [\"List\", \"Tuple\", \"Set\", \"Dictionary\"],\n      answer: \"Set\",\n      explanation: \"Sets in Python ensure that all elements are unique. Duplicate values are automatically removed.\"\n    }, {\n      question: \"Which of these is immutable?\",\n      options: [\"List\", \"Set\", \"Dictionary\", \"Tuple\"],\n      answer: \"Tuple\",\n      explanation: \"Tuples are immutable in Python, meaning their contents cannot be changed after creation.\"\n    }, {\n      question: \"Which of the following is used to find the length of a list?\",\n      options: [\"size()\", \"count()\", \"len()\", \"length()\"],\n      answer: \"len()\",\n      explanation: \"The `len()` function returns the number of items in a list or other iterable.\"\n    }, {\n      question: \"What is the default mode for opening a file in Python?\",\n      options: [\"r\", \"w\", \"a\", \"rw\"],\n      answer: \"r\",\n      explanation: \"The default mode for the `open()` function is `'r'`, which stands for read mode.\"\n    }, {\n      question: \"Which function removes an item from a list?\",\n      options: [\"delete()\", \"remove()\", \"erase()\", \"discard()\"],\n      answer: \"remove()\",\n      explanation: \"The `remove()` method removes the first occurrence of a specified value from a list.\"\n    }, {\n      question: \"Which function returns the highest value in a list?\",\n      options: [\"min()\", \"high()\", \"max()\", \"top()\"],\n      answer: \"max()\",\n      explanation: \"The `max()` function returns the largest item in an iterable or the largest of two or more arguments.\"\n    }, {\n      question: \"How do you sort a list in ascending order?\",\n      options: [\"sort()\", \"order()\", \"ascending()\", \"arrange()\"],\n      answer: \"sort()\",\n      explanation: \"The `sort()` method sorts the list in place in ascending order by default.\"\n    }, {\n      question: \"Which method converts a string to lowercase?\",\n      options: [\"lower()\", \"small()\", \"down()\", \"case()\"],\n      answer: \"lower()\",\n      explanation: \"The `lower()` method converts all characters in a string to lowercase.\"\n    }, {\n      question: \"What does `split()` method do?\",\n      options: [\"Splits a string into words\", \"Combines two strings\", \"Reverses a string\", \"Removes spaces\"],\n      answer: \"Splits a string into words\",\n      explanation: \"The `split()` method splits a string into a list of substrings based on a specified delimiter (default is whitespace).\"\n    }, {\n      question: \"Which of the following methods returns a copy of the string with all occurrences of a substring replaced?\",\n      options: [\"replace()\", \"swap()\", \"change()\", \"sub()\"],\n      answer: \"replace()\",\n      explanation: \"The `replace()` method returns a new string with all occurrences of a substring replaced by another substring.\"\n    }, {\n      question: \"Which statement is used to check if a key exists in a dictionary?\",\n      options: [\"if key in dict\", \"if dict contains key\", \"if dict.has_key(key)\", \"if key exists in dict\"],\n      answer: \"if key in dict\",\n      explanation: \"The `in` keyword is used to check if a key exists in a dictionary.\"\n    }, {\n      question: \"Which function adds an element to the end of a list?\",\n      options: [\"push()\", \"append()\", \"insert()\", \"add()\"],\n      answer: \"append()\",\n      explanation: \"The `append()` method adds an element to the end of a list.\"\n    }],\n    // Add explanations for other modules and courses similarly... {\n    3: [{\n      question: \"Which keyword defines a function in Python?\",\n      options: [\"function\", \"def\", \"define\", \"func\"],\n      answer: \"def\",\n      explanation: \"In Python, the `def` keyword is used to define a function. For example: `def my_function():`.\"\n    }, {\n      question: \"What is the purpose of a class in Python?\",\n      options: [\"To store multiple values\", \"To define a blueprint for objects\", \"To execute functions\", \"To perform calculations\"],\n      answer: \"To define a blueprint for objects\",\n      explanation: \"A class in Python is a blueprint for creating objects. It defines the properties and behaviors that the objects created from the class will have.\"\n    }, {\n      question: \"Which method is called when an object is created?\",\n      options: [\"__start__\", \"__new__\", \"__init__\", \"__create__\"],\n      answer: \"__init__\",\n      explanation: \"The `__init__` method is called when an object is created. It is used to initialize the object's attributes.\"\n    }, {\n      question: \"Which principle allows different classes to have the same method?\",\n      options: [\"Encapsulation\", \"Polymorphism\", \"Inheritance\", \"Abstraction\"],\n      answer: \"Polymorphism\",\n      explanation: \"Polymorphism allows different classes to have methods with the same name but different implementations.\"\n    }, {\n      question: \"Which function raises an exception in Python?\",\n      options: [\"throw\", \"raise\", \"error\", \"exception\"],\n      answer: \"raise\",\n      explanation: \"The `raise` keyword is used to raise an exception in Python. For example: `raise ValueError('Invalid value')`.\"\n    }, {\n      question: \"Which keyword is used to inherit a class?\",\n      options: [\"extends\", \"inherits\", \"super\", \"class\"],\n      answer: \"class\",\n      explanation: \"In Python, the `class` keyword is used to define a class, and inheritance is achieved by specifying the parent class in parentheses. For example: `class ChildClass(ParentClass):`.\"\n    }, {\n      question: \"How do you define a constructor in Python?\",\n      options: [\"def init()\", \"def __init__()\", \"def constructor()\", \"def new()\"],\n      answer: \"def __init__()\",\n      explanation: \"The constructor in Python is defined using the `__init__` method. It is automatically called when a new object is created.\"\n    }, {\n      question: \"What is encapsulation in Python?\",\n      options: [\"Hiding implementation details\", \"Reusing code\", \"Making variables public\", \"None of the above\"],\n      answer: \"Hiding implementation details\",\n      explanation: \"Encapsulation is the concept of hiding the internal details of an object and exposing only the necessary functionality.\"\n    }, {\n      question: \"Which symbol is used for method overriding in Python?\",\n      options: [\"@\", \"#\", \"override\", \"None\"],\n      answer: \"None\",\n      explanation: \"Python does not use a specific symbol for method overriding. Overriding is achieved by defining a method in the child class with the same name as in the parent class.\"\n    }, {\n      question: \"Which method returns the length of a list?\",\n      options: [\"size()\", \"len()\", \"count()\", \"length()\"],\n      answer: \"len()\",\n      explanation: \"The `len()` function returns the number of items in a list or other iterable.\"\n    }, {\n      question: \"Which function is used to delete an object?\",\n      options: [\"delete()\", \"del()\", \"remove()\", \"erase()\"],\n      answer: \"del()\",\n      explanation: \"The `del` keyword is used to delete an object in Python. For example: `del my_object`.\"\n    }, {\n      question: \"What is the superclass of all classes in Python?\",\n      options: [\"BaseClass\", \"Root\", \"Object\", \"Super\"],\n      answer: \"Object\",\n      explanation: \"In Python, the `object` class is the superclass of all classes. It is the root of the class hierarchy.\"\n    }, {\n      question: \"Which function is used to check if an object is an instance of a class?\",\n      options: [\"isInstance()\", \"checkType()\", \"instanceof()\", \"isinstance()\"],\n      answer: \"isinstance()\",\n      explanation: \"The `isinstance()` function checks if an object is an instance of a specific class or a tuple of classes.\"\n    }, {\n      question: \"Which keyword is used to define a static method?\",\n      options: [\"@staticmethod\", \"@class\", \"@static\", \"@func\"],\n      answer: \"@staticmethod\",\n      explanation: \"The `@staticmethod` decorator is used to define a static method in Python. Static methods do not require a reference to the instance or class.\"\n    }, {\n      question: \"Which method is called to destroy an object?\",\n      options: [\"destroy()\", \"remove()\", \"__del__()\", \"delete()\"],\n      answer: \"__del__()\",\n      explanation: \"The `__del__` method is called when an object is about to be destroyed. It is used to perform cleanup actions.\"\n    }],\n    4: [{\n      question: \"Which Python module is used for turtle graphics?\",\n      options: [\"graphics\", \"draw\", \"turtle\", \"paint\"],\n      answer: \"turtle\",\n      explanation: \"The `turtle` module is used for creating graphics and drawings in Python. It provides a simple way to create shapes and patterns.\"\n    }, {\n      question: \"What does the PIL library help with?\",\n      options: [\"File management\", \"Image processing\", \"Machine learning\", \"Data visualization\"],\n      answer: \"Image processing\",\n      explanation: \"PIL (Python Imaging Library) is used for image processing tasks such as opening, manipulating, and saving images.\"\n    }, {\n      question: \"Which function is used to convert an image to grayscale?\",\n      options: [\"convert('L')\", \"grayscale()\", \"change_gray()\", \"set_gray()\"],\n      answer: \"convert('L')\",\n      explanation: \"The `convert('L')` function in PIL converts an image to grayscale. The 'L' mode stands for luminance.\"\n    }, {\n      question: \"Which library is used for opening image files in Python?\",\n      options: [\"Pandas\", \"Matplotlib\", \"PIL\", \"Seaborn\"],\n      answer: \"PIL\",\n      explanation: \"The PIL (Python Imaging Library) is used for opening, manipulating, and saving image files.\"\n    }, {\n      question: \"Which shape can be drawn using turtle graphics?\",\n      options: [\"Circle\", \"Rectangle\", \"Polygon\", \"All of the above\"],\n      answer: \"All of the above\",\n      explanation: \"The `turtle` module can be used to draw various shapes, including circles, rectangles, and polygons.\"\n    }, {\n      question: \"Which function is used to display an image using PIL?\",\n      options: [\"show()\", \"display()\", \"render()\", \"draw()\"],\n      answer: \"show()\",\n      explanation: \"The `show()` function in PIL displays an image using the default image viewer.\"\n    }, {\n      question: \"Which method is used to load an image in PIL?\",\n      options: [\"Image.open()\", \"openImage()\", \"load()\", \"readImage()\"],\n      answer: \"Image.open()\",\n      explanation: \"The `Image.open()` function is used to load an image from a file in PIL.\"\n    }, {\n      question: \"Which function saves an image in PIL?\",\n      options: [\"save()\", \"export()\", \"write()\", \"store()\"],\n      answer: \"save()\",\n      explanation: \"The `save()` function in PIL is used to save an image to a file.\"\n    }, {\n      question: \"Which function draws a rectangle using turtle?\",\n      options: [\"drawRectangle()\", \"rectangle()\", \"rect()\", \"turtle.forward()\"],\n      answer: \"turtle.forward()\",\n      explanation: \"The `turtle.forward()` function is used to move the turtle forward, which can be used to draw shapes like rectangles.\"\n    }, {\n      question: \"Which color mode does PIL support?\",\n      options: [\"RGB\", \"CMYK\", \"L\", \"All of the above\"],\n      answer: \"All of the above\",\n      explanation: \"PIL supports multiple color modes, including RGB, CMYK, and grayscale (L).\"\n    }, {\n      question: \"Which function is used to draw a circle in turtle?\",\n      options: [\"circle()\", \"drawCircle()\", \"ellipse()\", \"oval()\"],\n      answer: \"circle()\",\n      explanation: \"The `circle()` function in the `turtle` module is used to draw a circle with a specified radius.\"\n    }, {\n      question: \"Which function rotates an image using PIL?\",\n      options: [\"rotate()\", \"turn()\", \"flip()\", \"spin()\"],\n      answer: \"rotate()\",\n      explanation: \"The `rotate()` function in PIL rotates an image by a specified angle.\"\n    }, {\n      question: \"Which function resizes an image using PIL?\",\n      options: [\"resize()\", \"scale()\", \"zoom()\", \"fit()\"],\n      answer: \"resize()\",\n      explanation: \"The `resize()` function in PIL resizes an image to the specified dimensions.\"\n    }, {\n      question: \"Which function pastes one image onto another in PIL?\",\n      options: [\"paste()\", \"overlay()\", \"merge()\", \"combine()\"],\n      answer: \"paste()\",\n      explanation: \"The `paste()` function in PIL is used to paste one image onto another at a specified position.\"\n    }, {\n      question: \"Which function converts an image to black and white?\",\n      options: [\"convert('1')\", \"bw()\", \"grayscale()\", \"mono()\"],\n      answer: \"convert('1')\",\n      explanation: \"The `convert('1')` function in PIL converts an image to black and white (1-bit pixels).\"\n    }]\n  },\n  Java: {\n    1: [{\n      question: \"Who created Java?\",\n      options: [\"Brendan Eich\", \"James Gosling\", \"Dennis Ritchie\", \"Bjarne Stroustrup\"],\n      answer: \"James Gosling\",\n      explanation: \"James Gosling created Java in the mid-1990s while working at Sun Microsystems.\"\n    }, {\n      question: \"What is the default value of an int variable in Java?\",\n      options: [\"0\", \"null\", \"undefined\", \"1\"],\n      answer: \"0\",\n      explanation: \"In Java, the default value of an `int` variable is `0` if it is not explicitly initialized.\"\n    }\n    // Add explanations for other Java questions...\n    ]\n    // Add explanations for other modules and courses similarly...\n  }\n};\nconst shuffleArray = array => [...array].sort(() => Math.random() - 0.5);\nconst getRandomQuestions = questions => {\n  return shuffleArray(questions).slice(0, 10).map(q => ({\n    ...q,\n    options: shuffleArray(q.options)\n  }));\n};\nconst Quiz = () => {\n  _s();\n  const {\n    courseName,\n    moduleId\n  } = useParams();\n  const navigate = useNavigate();\n  const [questions, setQuestions] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [score, setScore] = useState(0);\n  const [quizCompleted, setQuizCompleted] = useState(false);\n  const [incorrectAnswers, setIncorrectAnswers] = useState([]);\n  useEffect(() => {\n    if (!quizData[courseName] || !quizData[courseName][moduleId]) {\n      console.error(\"No quiz available for this module.\");\n      navigate(`/course/${courseName}/1`); // Redirect to first module if invalid\n      return;\n    }\n    setQuestions(getRandomQuestions(quizData[courseName][moduleId]));\n  }, [courseName, moduleId, navigate]);\n  const handleAnswer = option => {\n    if (selectedAnswer !== null) return; // Prevent multiple selections\n    setSelectedAnswer(option);\n    const currentQuestion = questions[currentIndex];\n    if (option === currentQuestion.answer) {\n      setScore(prev => prev + 1);\n    } else {\n      setIncorrectAnswers(prev => [...prev, {\n        question: currentQuestion.question,\n        correctAnswer: currentQuestion.answer,\n        explanation: currentQuestion.explanation || \"No explanation provided.\" // Handle missing explanation\n      }]);\n    }\n  };\n  const handleNext = () => {\n    if (currentIndex + 1 < questions.length) {\n      setCurrentIndex(prev => prev + 1);\n      setSelectedAnswer(null);\n    } else {\n      setQuizCompleted(true);\n    }\n  };\n  const handleRetryQuiz = () => {\n    setCurrentIndex(0);\n    setSelectedAnswer(null);\n    setScore(0);\n    setQuizCompleted(false);\n    setIncorrectAnswers([]);\n    setQuestions(getRandomQuestions(quizData[courseName][moduleId]));\n  };\n  const handleQuizCompletion = () => {\n    const nextModule = Math.min(6, parseInt(moduleId) + 1);\n    navigate(`/course/${courseName}/${nextModule}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: !quizCompleted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Quiz for \", courseName, \" - Module \", moduleId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Question \", currentIndex + 1, \" of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 11\n      }, this), questions.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: questions[currentIndex].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"options-list\",\n          children: questions[currentIndex].options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `option-item ${selectedAnswer ? option === questions[currentIndex].answer ? \"correct\" : option === selectedAnswer ? \"incorrect\" : \"\" : \"\"}`,\n            onClick: () => handleAnswer(option),\n            children: option\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next-btn\",\n        onClick: handleNext,\n        disabled: selectedAnswer === null,\n        children: currentIndex + 1 < questions.length ? \"Next Question\" : \"Finish Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(QuizConclusion, {\n      score: score,\n      totalQuestions: questions.length,\n      incorrectAnswers: incorrectAnswers,\n      onRetry: handleRetryQuiz,\n      onNext: handleQuizCompletion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 469,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"VuZGnMrmQODVEgG1uNKzWnojmIA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Quiz;\nconst QuizConclusion = ({\n  score,\n  totalQuestions,\n  incorrectAnswers,\n  onRetry,\n  onNext\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-conclusion\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Quiz Completed!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your Final Score: \", score, \"/\", totalQuestions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 7\n    }, this), score >= 7 ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"next-btn\",\n      onClick: onNext,\n      children: \"\\uD83C\\uDFAF Proceed to Next Module\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You can review your incorrect answers below:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"review-section\",\n        children: [incorrectAnswers.length > 0 ? incorrectAnswers.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"review-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Question:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 22\n            }, this), \" \", item.question]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Correct Answer:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 22\n            }, this), \" \", item.correctAnswer]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Explanation:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 22\n            }, this), \" \", item.explanation]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Great job! You got all questions correct. \\uD83C\\uDF89\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"restart-btn\",\n          onClick: onRetry,\n          children: \"\\uD83D\\uDD04 Retake Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 517,\n    columnNumber: 5\n  }, this);\n};\n_c2 = QuizConclusion;\nexport default Quiz;\nvar _c, _c2;\n$RefreshReg$(_c, \"Quiz\");\n$RefreshReg$(_c2, \"QuizConclusion\");","map":{"version":3,"names":["useParams","useNavigate","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","quizData","Python","question","options","answer","explanation","Java","shuffleArray","array","sort","Math","random","getRandomQuestions","questions","slice","map","q","Quiz","_s","courseName","moduleId","navigate","setQuestions","currentIndex","setCurrentIndex","selectedAnswer","setSelectedAnswer","score","setScore","quizCompleted","setQuizCompleted","incorrectAnswers","setIncorrectAnswers","console","error","handleAnswer","option","currentQuestion","prev","correctAnswer","handleNext","length","handleRetryQuiz","handleQuizCompletion","nextModule","min","parseInt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","idx","onClick","disabled","QuizConclusion","totalQuestions","onRetry","onNext","_c","item","index","_c2","$RefreshReg$"],"sources":["C:/Users/david/OneDrive/Desktop/learning tutor/Karunya_Project_X/frontend/src/components/Quiz.js"],"sourcesContent":["import { useParams, useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport \"./quiz.css\"\n\n// Define the quiz data with 15 questions per module\nconst quizData = {\n  Python: {\n    1: [\n      {\n        question: \"Who created Python?\",\n        options: [\"Guido van Rossum\", \"James Gosling\", \"Dennis Ritchie\", \"Bjarne Stroustrup\"],\n        answer: \"Guido van Rossum\",\n        explanation: \"Guido van Rossum created Python in the late 1980s. He is often referred to as Python's 'Benevolent Dictator For Life' (BDFL).\"\n      },\n      {\n        question: \"Which Python version introduced pattern matching?\",\n        options: [\"Python 2.7\", \"Python 3.6\", \"Python 3.9\", \"Python 3.10\"],\n        answer: \"Python 3.10\",\n        explanation: \"Pattern matching was introduced in Python 3.10 as part of PEP 634. It allows for more expressive and readable code when working with complex data structures.\"\n      },\n      {\n        question: \"What is NOT a key feature of Python?\",\n        options: [\"Readability\", \"Dynamically typed\", \"Strong typing\", \"Complex syntax\"],\n        answer: \"Complex syntax\",\n        explanation: \"Python is known for its simplicity and readability, not complex syntax. Its syntax is designed to be intuitive and easy to understand.\"\n      },\n      {\n        question: \"What does the `len()` function do?\",\n        options: [\"Counts items in a list\", \"Finds maximum value\", \"Checks if a variable is None\", \"Reverses a string\"],\n        answer: \"Counts items in a list\",\n        explanation: \"The `len()` function returns the number of items in an object, such as a list, tuple, or string.\"\n      },\n      {\n        question: \"What will `5 ** 2` return?\",\n        options: [\"25\", \"10\", \"5\", \"2.5\"],\n        answer: \"25\",\n        explanation: \"The `**` operator is used for exponentiation in Python. `5 ** 2` means 5 raised to the power of 2, which is 25.\"\n      },\n      {\n        question: \"Which statement is used for loops in Python?\",\n        options: [\"for\", \"loop\", \"repeat\", \"iterate\"],\n        answer: \"for\",\n        explanation: \"The `for` statement is used to iterate over a sequence (like a list, tuple, or string) in Python.\"\n      },\n      {\n        question: \"Which of these is not a Python data type?\",\n        options: [\"List\", \"Tuple\", \"Class\", \"Enum\"],\n        answer: \"Enum\",\n        explanation: \"While Python supports lists, tuples, and classes, `Enum` is not a built-in data type. It is available in the `enum` module.\"\n      },\n      {\n        question: \"What does the `continue` statement do?\",\n        options: [\"Exits the loop\", \"Skips the current iteration\", \"Repeats the loop\", \"Breaks the loop\"],\n        answer: \"Skips the current iteration\",\n        explanation: \"The `continue` statement skips the rest of the code inside the loop for the current iteration and moves to the next iteration.\"\n      },\n      {\n        question: \"What does `self` refer to in Python classes?\",\n        options: [\"The current class\", \"The previous object\", \"The current instance\", \"The superclass\"],\n        answer: \"The current instance\",\n        explanation: \"In Python, `self` refers to the current instance of the class. It is used to access variables and methods associated with the instance.\"\n      },\n      {\n        question: \"How do you declare a function in Python?\",\n        options: [\"def func():\", \"function func() {}\", \"funct func() {}\", \"void func()\"],\n        answer: \"def func():\",\n        explanation: \"In Python, functions are declared using the `def` keyword, followed by the function name and parentheses.\"\n      },\n      {\n        question: \"Which module is used for regular expressions in Python?\",\n        options: [\"regex\", \"re\", \"regularex\", \"pattern\"],\n        answer: \"re\",\n        explanation: \"The `re` module provides support for regular expressions in Python, allowing pattern matching and text manipulation.\"\n      },\n      {\n        question: \"Which keyword is used to create a function?\",\n        options: [\"function\", \"def\", \"lambda\", \"create\"],\n        answer: \"def\",\n        explanation: \"The `def` keyword is used to define a function in Python.\"\n      },\n      {\n        question: \"What does the `is` keyword check?\",\n        options: [\"Value equality\", \"Reference equality\", \"Identity equality\", \"Type checking\"],\n        answer: \"Identity equality\",\n        explanation: \"The `is` keyword checks if two variables point to the same object in memory (identity equality), not if their values are equal.\"\n      },\n      {\n        question: \"Which data structure allows duplicate values?\",\n        options: [\"Set\", \"Tuple\", \"List\", \"Dictionary\"],\n        answer: \"List\",\n        explanation: \"Lists in Python allow duplicate values, whereas sets and dictionaries do not.\"\n      },\n      {\n        question: \"How do you start a comment in Python?\",\n        options: [\"//\", \"/* */\", \"#\", \"--\"],\n        answer: \"#\",\n        explanation: \"In Python, comments start with the `#` symbol. Multi-line comments are not natively supported but can be simulated using triple quotes.\"\n      },\n    ],\n    2: [\n      {\n        question: \"Which of these is used to store key-value pairs in Python?\",\n        options: [\"List\", \"Tuple\", \"Dictionary\", \"Set\"],\n        answer: \"Dictionary\",\n        explanation: \"Dictionaries in Python store data as key-value pairs, making them ideal for mapping relationships.\"\n      },\n      {\n        question: \"Which method removes whitespace from a string?\",\n        options: [\"strip()\", \"trim()\", \"remove()\", \"clean()\"],\n        answer: \"strip()\",\n        explanation: \"The `strip()` method removes leading and trailing whitespace from a string.\"\n      },\n      {\n        question: \"How do you open a file in read mode?\",\n        options: [\"open('file.txt', 'r')\", \"open('file.txt')\", \"open('file.txt', 'w')\", \"file('file.txt')\"],\n        answer: \"open('file.txt', 'r')\",\n        explanation: \"The `open()` function with the mode `'r'` opens a file in read mode.\"\n      },\n      {\n        question: \"Which data structure ensures unique values?\",\n        options: [\"List\", \"Tuple\", \"Set\", \"Dictionary\"],\n        answer: \"Set\",\n        explanation: \"Sets in Python ensure that all elements are unique. Duplicate values are automatically removed.\"\n      },\n      {\n        question: \"Which of these is immutable?\",\n        options: [\"List\", \"Set\", \"Dictionary\", \"Tuple\"],\n        answer: \"Tuple\",\n        explanation: \"Tuples are immutable in Python, meaning their contents cannot be changed after creation.\"\n      },\n      {\n        question: \"Which of the following is used to find the length of a list?\",\n        options: [\"size()\", \"count()\", \"len()\", \"length()\"],\n        answer: \"len()\",\n        explanation: \"The `len()` function returns the number of items in a list or other iterable.\"\n      },\n      {\n        question: \"What is the default mode for opening a file in Python?\",\n        options: [\"r\", \"w\", \"a\", \"rw\"],\n        answer: \"r\",\n        explanation: \"The default mode for the `open()` function is `'r'`, which stands for read mode.\"\n      },\n      {\n        question: \"Which function removes an item from a list?\",\n        options: [\"delete()\", \"remove()\", \"erase()\", \"discard()\"],\n        answer: \"remove()\",\n        explanation: \"The `remove()` method removes the first occurrence of a specified value from a list.\"\n      },\n      {\n        question: \"Which function returns the highest value in a list?\",\n        options: [\"min()\", \"high()\", \"max()\", \"top()\"],\n        answer: \"max()\",\n        explanation: \"The `max()` function returns the largest item in an iterable or the largest of two or more arguments.\"\n      },\n      {\n        question: \"How do you sort a list in ascending order?\",\n        options: [\"sort()\", \"order()\", \"ascending()\", \"arrange()\"],\n        answer: \"sort()\",\n        explanation: \"The `sort()` method sorts the list in place in ascending order by default.\"\n      },\n      {\n        question: \"Which method converts a string to lowercase?\",\n        options: [\"lower()\", \"small()\", \"down()\", \"case()\"],\n        answer: \"lower()\",\n        explanation: \"The `lower()` method converts all characters in a string to lowercase.\"\n      },\n      {\n        question: \"What does `split()` method do?\",\n        options: [\"Splits a string into words\", \"Combines two strings\", \"Reverses a string\", \"Removes spaces\"],\n        answer: \"Splits a string into words\",\n        explanation: \"The `split()` method splits a string into a list of substrings based on a specified delimiter (default is whitespace).\"\n      },\n      {\n        question: \"Which of the following methods returns a copy of the string with all occurrences of a substring replaced?\",\n        options: [\"replace()\", \"swap()\", \"change()\", \"sub()\"],\n        answer: \"replace()\",\n        explanation: \"The `replace()` method returns a new string with all occurrences of a substring replaced by another substring.\"\n      },\n      {\n        question: \"Which statement is used to check if a key exists in a dictionary?\",\n        options: [\"if key in dict\", \"if dict contains key\", \"if dict.has_key(key)\", \"if key exists in dict\"],\n        answer: \"if key in dict\",\n        explanation: \"The `in` keyword is used to check if a key exists in a dictionary.\"\n      },\n      {\n        question: \"Which function adds an element to the end of a list?\",\n        options: [\"push()\", \"append()\", \"insert()\", \"add()\"],\n        answer: \"append()\",\n        explanation: \"The `append()` method adds an element to the end of a list.\"\n      },\n    ],\n    // Add explanations for other modules and courses similarly... {\n        3: [\n          {\n            question: \"Which keyword defines a function in Python?\",\n            options: [\"function\", \"def\", \"define\", \"func\"],\n            answer: \"def\",\n            explanation: \"In Python, the `def` keyword is used to define a function. For example: `def my_function():`.\"\n          },\n          {\n            question: \"What is the purpose of a class in Python?\",\n            options: [\"To store multiple values\", \"To define a blueprint for objects\", \"To execute functions\", \"To perform calculations\"],\n            answer: \"To define a blueprint for objects\",\n            explanation: \"A class in Python is a blueprint for creating objects. It defines the properties and behaviors that the objects created from the class will have.\"\n          },\n          {\n            question: \"Which method is called when an object is created?\",\n            options: [\"__start__\", \"__new__\", \"__init__\", \"__create__\"],\n            answer: \"__init__\",\n            explanation: \"The `__init__` method is called when an object is created. It is used to initialize the object's attributes.\"\n          },\n          {\n            question: \"Which principle allows different classes to have the same method?\",\n            options: [\"Encapsulation\", \"Polymorphism\", \"Inheritance\", \"Abstraction\"],\n            answer: \"Polymorphism\",\n            explanation: \"Polymorphism allows different classes to have methods with the same name but different implementations.\"\n          },\n          {\n            question: \"Which function raises an exception in Python?\",\n            options: [\"throw\", \"raise\", \"error\", \"exception\"],\n            answer: \"raise\",\n            explanation: \"The `raise` keyword is used to raise an exception in Python. For example: `raise ValueError('Invalid value')`.\"\n          },\n          {\n            question: \"Which keyword is used to inherit a class?\",\n            options: [\"extends\", \"inherits\", \"super\", \"class\"],\n            answer: \"class\",\n            explanation: \"In Python, the `class` keyword is used to define a class, and inheritance is achieved by specifying the parent class in parentheses. For example: `class ChildClass(ParentClass):`.\"\n          },\n          {\n            question: \"How do you define a constructor in Python?\",\n            options: [\"def init()\", \"def __init__()\", \"def constructor()\", \"def new()\"],\n            answer: \"def __init__()\",\n            explanation: \"The constructor in Python is defined using the `__init__` method. It is automatically called when a new object is created.\"\n          },\n          {\n            question: \"What is encapsulation in Python?\",\n            options: [\"Hiding implementation details\", \"Reusing code\", \"Making variables public\", \"None of the above\"],\n            answer: \"Hiding implementation details\",\n            explanation: \"Encapsulation is the concept of hiding the internal details of an object and exposing only the necessary functionality.\"\n          },\n          {\n            question: \"Which symbol is used for method overriding in Python?\",\n            options: [\"@\", \"#\", \"override\", \"None\"],\n            answer: \"None\",\n            explanation: \"Python does not use a specific symbol for method overriding. Overriding is achieved by defining a method in the child class with the same name as in the parent class.\"\n          },\n          {\n            question: \"Which method returns the length of a list?\",\n            options: [\"size()\", \"len()\", \"count()\", \"length()\"],\n            answer: \"len()\",\n            explanation: \"The `len()` function returns the number of items in a list or other iterable.\"\n          },\n          {\n            question: \"Which function is used to delete an object?\",\n            options: [\"delete()\", \"del()\", \"remove()\", \"erase()\"],\n            answer: \"del()\",\n            explanation: \"The `del` keyword is used to delete an object in Python. For example: `del my_object`.\"\n          },\n          {\n            question: \"What is the superclass of all classes in Python?\",\n            options: [\"BaseClass\", \"Root\", \"Object\", \"Super\"],\n            answer: \"Object\",\n            explanation: \"In Python, the `object` class is the superclass of all classes. It is the root of the class hierarchy.\"\n          },\n          {\n            question: \"Which function is used to check if an object is an instance of a class?\",\n            options: [\"isInstance()\", \"checkType()\", \"instanceof()\", \"isinstance()\"],\n            answer: \"isinstance()\",\n            explanation: \"The `isinstance()` function checks if an object is an instance of a specific class or a tuple of classes.\"\n          },\n          {\n            question: \"Which keyword is used to define a static method?\",\n            options: [\"@staticmethod\", \"@class\", \"@static\", \"@func\"],\n            answer: \"@staticmethod\",\n            explanation: \"The `@staticmethod` decorator is used to define a static method in Python. Static methods do not require a reference to the instance or class.\"\n          },\n          {\n            question: \"Which method is called to destroy an object?\",\n            options: [\"destroy()\", \"remove()\", \"__del__()\", \"delete()\"],\n            answer: \"__del__()\",\n            explanation: \"The `__del__` method is called when an object is about to be destroyed. It is used to perform cleanup actions.\"\n          },\n        ],\n        4: [\n          {\n            question: \"Which Python module is used for turtle graphics?\",\n            options: [\"graphics\", \"draw\", \"turtle\", \"paint\"],\n            answer: \"turtle\",\n            explanation: \"The `turtle` module is used for creating graphics and drawings in Python. It provides a simple way to create shapes and patterns.\"\n          },\n          {\n            question: \"What does the PIL library help with?\",\n            options: [\"File management\", \"Image processing\", \"Machine learning\", \"Data visualization\"],\n            answer: \"Image processing\",\n            explanation: \"PIL (Python Imaging Library) is used for image processing tasks such as opening, manipulating, and saving images.\"\n          },\n          {\n            question: \"Which function is used to convert an image to grayscale?\",\n            options: [\"convert('L')\", \"grayscale()\", \"change_gray()\", \"set_gray()\"],\n            answer: \"convert('L')\",\n            explanation: \"The `convert('L')` function in PIL converts an image to grayscale. The 'L' mode stands for luminance.\"\n          },\n          {\n            question: \"Which library is used for opening image files in Python?\",\n            options: [\"Pandas\", \"Matplotlib\", \"PIL\", \"Seaborn\"],\n            answer: \"PIL\",\n            explanation: \"The PIL (Python Imaging Library) is used for opening, manipulating, and saving image files.\"\n          },\n          {\n            question: \"Which shape can be drawn using turtle graphics?\",\n            options: [\"Circle\", \"Rectangle\", \"Polygon\", \"All of the above\"],\n            answer: \"All of the above\",\n            explanation: \"The `turtle` module can be used to draw various shapes, including circles, rectangles, and polygons.\"\n          },\n          {\n            question: \"Which function is used to display an image using PIL?\",\n            options: [\"show()\", \"display()\", \"render()\", \"draw()\"],\n            answer: \"show()\",\n            explanation: \"The `show()` function in PIL displays an image using the default image viewer.\"\n          },\n          {\n            question: \"Which method is used to load an image in PIL?\",\n            options: [\"Image.open()\", \"openImage()\", \"load()\", \"readImage()\"],\n            answer: \"Image.open()\",\n            explanation: \"The `Image.open()` function is used to load an image from a file in PIL.\"\n          },\n          {\n            question: \"Which function saves an image in PIL?\",\n            options: [\"save()\", \"export()\", \"write()\", \"store()\"],\n            answer: \"save()\",\n            explanation: \"The `save()` function in PIL is used to save an image to a file.\"\n          },\n          {\n            question: \"Which function draws a rectangle using turtle?\",\n            options: [\"drawRectangle()\", \"rectangle()\", \"rect()\", \"turtle.forward()\"],\n            answer: \"turtle.forward()\",\n            explanation: \"The `turtle.forward()` function is used to move the turtle forward, which can be used to draw shapes like rectangles.\"\n          },\n          {\n            question: \"Which color mode does PIL support?\",\n            options: [\"RGB\", \"CMYK\", \"L\", \"All of the above\"],\n            answer: \"All of the above\",\n            explanation: \"PIL supports multiple color modes, including RGB, CMYK, and grayscale (L).\"\n          },\n          {\n            question: \"Which function is used to draw a circle in turtle?\",\n            options: [\"circle()\", \"drawCircle()\", \"ellipse()\", \"oval()\"],\n            answer: \"circle()\",\n            explanation: \"The `circle()` function in the `turtle` module is used to draw a circle with a specified radius.\"\n          },\n          {\n            question: \"Which function rotates an image using PIL?\",\n            options: [\"rotate()\", \"turn()\", \"flip()\", \"spin()\"],\n            answer: \"rotate()\",\n            explanation: \"The `rotate()` function in PIL rotates an image by a specified angle.\"\n          },\n          {\n            question: \"Which function resizes an image using PIL?\",\n            options: [\"resize()\", \"scale()\", \"zoom()\", \"fit()\"],\n            answer: \"resize()\",\n            explanation: \"The `resize()` function in PIL resizes an image to the specified dimensions.\"\n          },\n          {\n            question: \"Which function pastes one image onto another in PIL?\",\n            options: [\"paste()\", \"overlay()\", \"merge()\", \"combine()\"],\n            answer: \"paste()\",\n            explanation: \"The `paste()` function in PIL is used to paste one image onto another at a specified position.\"\n          },\n          {\n            question: \"Which function converts an image to black and white?\",\n            options: [\"convert('1')\", \"bw()\", \"grayscale()\", \"mono()\"],\n            answer: \"convert('1')\",\n            explanation: \"The `convert('1')` function in PIL converts an image to black and white (1-bit pixels).\"\n          },\n        ],\n    \n  },\n  Java: {\n    1: [\n      {\n        question: \"Who created Java?\",\n        options: [\"Brendan Eich\", \"James Gosling\", \"Dennis Ritchie\", \"Bjarne Stroustrup\"],\n        answer: \"James Gosling\",\n        explanation: \"James Gosling created Java in the mid-1990s while working at Sun Microsystems.\"\n      },\n      {\n        question: \"What is the default value of an int variable in Java?\",\n        options: [\"0\", \"null\", \"undefined\", \"1\"],\n        answer: \"0\",\n        explanation: \"In Java, the default value of an `int` variable is `0` if it is not explicitly initialized.\"\n      },\n      // Add explanations for other Java questions...\n    ],\n    // Add explanations for other modules and courses similarly...\n  },\n};\nconst shuffleArray = (array) => [...array].sort(() => Math.random() - 0.5);\n\nconst getRandomQuestions = (questions) => {\n  return shuffleArray(questions).slice(0, 10).map((q) => ({\n    ...q,\n    options: shuffleArray(q.options),\n  }));\n};\n\nconst Quiz = () => {\n  const { courseName, moduleId } = useParams();\n  const navigate = useNavigate();\n  const [questions, setQuestions] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [score, setScore] = useState(0);\n  const [quizCompleted, setQuizCompleted] = useState(false);\n  const [incorrectAnswers, setIncorrectAnswers] = useState([]);\n\n  useEffect(() => {\n    if (!quizData[courseName] || !quizData[courseName][moduleId]) {\n      console.error(\"No quiz available for this module.\");\n      navigate(`/course/${courseName}/1`); // Redirect to first module if invalid\n      return;\n    }\n    setQuestions(getRandomQuestions(quizData[courseName][moduleId]));\n  }, [courseName, moduleId, navigate]);\n\n  const handleAnswer = (option) => {\n    if (selectedAnswer !== null) return; // Prevent multiple selections\n    setSelectedAnswer(option);\n\n    const currentQuestion = questions[currentIndex];\n    if (option === currentQuestion.answer) {\n      setScore((prev) => prev + 1);\n    } else {\n      setIncorrectAnswers((prev) => [\n        ...prev,\n        {\n          question: currentQuestion.question,\n          correctAnswer: currentQuestion.answer,\n          explanation: currentQuestion.explanation || \"No explanation provided.\", // Handle missing explanation\n        },\n      ]);\n    }\n  };\n\n  const handleNext = () => {\n    if (currentIndex + 1 < questions.length) {\n      setCurrentIndex((prev) => prev + 1);\n      setSelectedAnswer(null);\n    } else {\n      setQuizCompleted(true);\n    }\n  };\n\n  const handleRetryQuiz = () => {\n    setCurrentIndex(0);\n    setSelectedAnswer(null);\n    setScore(0);\n    setQuizCompleted(false);\n    setIncorrectAnswers([]);\n    setQuestions(getRandomQuestions(quizData[courseName][moduleId]));\n  };\n\n  const handleQuizCompletion = () => {\n    const nextModule = Math.min(6, parseInt(moduleId) + 1);\n    navigate(`/course/${courseName}/${nextModule}`);\n  };\n\n  return (\n    <div className=\"quiz-container\">\n      {!quizCompleted ? (\n        <>\n          <h2>Quiz for {courseName} - Module {moduleId}</h2>\n          <p>Question {currentIndex + 1} of {questions.length}</p>\n          {questions.length > 0 && (\n            <>\n              <p><strong>{questions[currentIndex].question}</strong></p>\n              <ul className=\"options-list\">\n                {questions[currentIndex].options.map((option, idx) => (\n                  <li\n                    key={idx}\n                    className={`option-item ${\n                      selectedAnswer\n                        ? option === questions[currentIndex].answer\n                          ? \"correct\"\n                          : option === selectedAnswer\n                          ? \"incorrect\"\n                          : \"\"\n                        : \"\"\n                    }`}\n                    onClick={() => handleAnswer(option)}\n                  >\n                    {option}\n                  </li>\n                ))}\n              </ul>\n            </>\n          )}\n          <button className=\"next-btn\" onClick={handleNext} disabled={selectedAnswer === null}>\n            {currentIndex + 1 < questions.length ? \"Next Question\" : \"Finish Quiz\"}\n          </button>\n        </>\n      ) : (\n        <QuizConclusion\n          score={score}\n          totalQuestions={questions.length}\n          incorrectAnswers={incorrectAnswers}\n          onRetry={handleRetryQuiz}\n          onNext={handleQuizCompletion}\n        />\n      )}\n    </div>\n  );\n};\n\nconst QuizConclusion = ({ score, totalQuestions, incorrectAnswers, onRetry, onNext }) => {\n  return (\n    <div className=\"quiz-conclusion\">\n      <h2>Quiz Completed!</h2>\n      <p>Your Final Score: {score}/{totalQuestions}</p>\n      {score >= 7 ? (\n        <button className=\"next-btn\" onClick={onNext}>\n          🎯 Proceed to Next Module\n        </button>\n      ) : (\n        <>\n          <p>You can review your incorrect answers below:</p>\n          <div className=\"review-section\">\n            {incorrectAnswers.length > 0 ? (\n              incorrectAnswers.map((item, index) => (\n                <div key={index} className=\"review-item\">\n                  <p><strong>Question:</strong> {item.question}</p>\n                  <p><strong>Correct Answer:</strong> {item.correctAnswer}</p>\n                  <p><strong>Explanation:</strong> {item.explanation}</p>\n                </div>\n              ))\n            ) : (\n              <p>Great job! You got all questions correct. 🎉</p>\n            )}\n            <button className=\"restart-btn\" onClick={onRetry}>\n              🔄 Retake Quiz\n            </button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Quiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}